//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Cfb.CandidatePortal.Data.CPModel", "FK_TollingLetters_TollingEvents", "TollingEvents", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cfb.CandidatePortal.Data.TollingEvent), "TollingLetters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cfb.CandidatePortal.Data.TollingLetter), true)]
[assembly: EdmRelationshipAttribute("Cfb.CandidatePortal.Data.CPModel", "FK_TollingLetters_TollingSources", "TollingSources", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cfb.CandidatePortal.Data.TollingSource), "TollingLetters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cfb.CandidatePortal.Data.TollingLetter), true)]
[assembly: EdmRelationshipAttribute("Cfb.CandidatePortal.Data.CPModel", "FK_TollingLetters_TollingTypes", "TollingTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cfb.CandidatePortal.Data.TollingType), "TollingLetters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cfb.CandidatePortal.Data.TollingLetter), true)]

#endregion

namespace Cfb.CandidatePortal.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CPEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CPEntities object using the connection string found in the 'CPEntities' section of the application configuration file.
        /// </summary>
        public CPEntities() : base("name=CPEntities", "CPEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CPEntities object.
        /// </summary>
        public CPEntities(string connectionString) : base(connectionString, "CPEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CPEntities object.
        /// </summary>
        public CPEntities(EntityConnection connection) : base(connection, "CPEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExtensionRequest> ExtensionRequests
        {
            get
            {
                if ((_ExtensionRequests == null))
                {
                    _ExtensionRequests = base.CreateObjectSet<ExtensionRequest>("ExtensionRequests");
                }
                return _ExtensionRequests;
            }
        }
        private ObjectSet<ExtensionRequest> _ExtensionRequests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GlobalSetting> GlobalSettings
        {
            get
            {
                if ((_GlobalSettings == null))
                {
                    _GlobalSettings = base.CreateObjectSet<GlobalSetting>("GlobalSettings");
                }
                return _GlobalSettings;
            }
        }
        private ObjectSet<GlobalSetting> _GlobalSettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TollingEvent> TollingEvents
        {
            get
            {
                if ((_TollingEvents == null))
                {
                    _TollingEvents = base.CreateObjectSet<TollingEvent>("TollingEvents");
                }
                return _TollingEvents;
            }
        }
        private ObjectSet<TollingEvent> _TollingEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TollingLetter> TollingLetters
        {
            get
            {
                if ((_TollingLetters == null))
                {
                    _TollingLetters = base.CreateObjectSet<TollingLetter>("TollingLetters");
                }
                return _TollingLetters;
            }
        }
        private ObjectSet<TollingLetter> _TollingLetters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TollingSource> TollingSources
        {
            get
            {
                if ((_TollingSources == null))
                {
                    _TollingSources = base.CreateObjectSet<TollingSource>("TollingSources");
                }
                return _TollingSources;
            }
        }
        private ObjectSet<TollingSource> _TollingSources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TollingType> TollingTypes
        {
            get
            {
                if ((_TollingTypes == null))
                {
                    _TollingTypes = base.CreateObjectSet<TollingType>("TollingTypes");
                }
                return _TollingTypes;
            }
        }
        private ObjectSet<TollingType> _TollingTypes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExtensionRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExtensionRequests(ExtensionRequest extensionRequest)
        {
            base.AddObject("ExtensionRequests", extensionRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GlobalSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGlobalSettings(GlobalSetting globalSetting)
        {
            base.AddObject("GlobalSettings", globalSetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TollingEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTollingEvents(TollingEvent tollingEvent)
        {
            base.AddObject("TollingEvents", tollingEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TollingLetters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTollingLetters(TollingLetter tollingLetter)
        {
            base.AddObject("TollingLetters", tollingLetter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TollingSources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTollingSources(TollingSource tollingSource)
        {
            base.AddObject("TollingSources", tollingSource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TollingTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTollingTypes(TollingType tollingType)
        {
            base.AddObject("TollingTypes", tollingType);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cfb.CandidatePortal.Data.CPModel", Name="ExtensionRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExtensionRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExtensionRequest object.
        /// </summary>
        /// <param name="candidateID">Initial value of the CandidateID property.</param>
        /// <param name="electionCycle">Initial value of the ElectionCycle property.</param>
        /// <param name="extensionType">Initial value of the ExtensionType property.</param>
        /// <param name="reviewNumber">Initial value of the ReviewNumber property.</param>
        /// <param name="iteration">Initial value of the Iteration property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="requestedDueDate">Initial value of the RequestedDueDate property.</param>
        /// <param name="reason">Initial value of the Reason property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static ExtensionRequest CreateExtensionRequest(global::System.String candidateID, global::System.String electionCycle, global::System.Byte extensionType, global::System.Byte reviewNumber, global::System.Byte iteration, global::System.DateTime date, global::System.DateTime requestedDueDate, global::System.String reason, global::System.Byte[] version)
        {
            ExtensionRequest extensionRequest = new ExtensionRequest();
            extensionRequest.CandidateID = candidateID;
            extensionRequest.ElectionCycle = electionCycle;
            extensionRequest.ExtensionType = extensionType;
            extensionRequest.ReviewNumber = reviewNumber;
            extensionRequest.Iteration = iteration;
            extensionRequest.Date = date;
            extensionRequest.RequestedDueDate = requestedDueDate;
            extensionRequest.Reason = reason;
            extensionRequest.Version = version;
            return extensionRequest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CandidateID
        {
            get
            {
                return _CandidateID;
            }
            set
            {
                if (_CandidateID != value)
                {
                    OnCandidateIDChanging(value);
                    ReportPropertyChanging("CandidateID");
                    _CandidateID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CandidateID");
                    OnCandidateIDChanged();
                }
            }
        }
        private global::System.String _CandidateID;
        partial void OnCandidateIDChanging(global::System.String value);
        partial void OnCandidateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ElectionCycle
        {
            get
            {
                return _ElectionCycle;
            }
            set
            {
                if (_ElectionCycle != value)
                {
                    OnElectionCycleChanging(value);
                    ReportPropertyChanging("ElectionCycle");
                    _ElectionCycle = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ElectionCycle");
                    OnElectionCycleChanged();
                }
            }
        }
        private global::System.String _ElectionCycle;
        partial void OnElectionCycleChanging(global::System.String value);
        partial void OnElectionCycleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ExtensionType
        {
            get
            {
                return _ExtensionType;
            }
            set
            {
                if (_ExtensionType != value)
                {
                    OnExtensionTypeChanging(value);
                    ReportPropertyChanging("ExtensionType");
                    _ExtensionType = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExtensionType");
                    OnExtensionTypeChanged();
                }
            }
        }
        private global::System.Byte _ExtensionType;
        partial void OnExtensionTypeChanging(global::System.Byte value);
        partial void OnExtensionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ReviewNumber
        {
            get
            {
                return _ReviewNumber;
            }
            set
            {
                if (_ReviewNumber != value)
                {
                    OnReviewNumberChanging(value);
                    ReportPropertyChanging("ReviewNumber");
                    _ReviewNumber = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReviewNumber");
                    OnReviewNumberChanged();
                }
            }
        }
        private global::System.Byte _ReviewNumber;
        partial void OnReviewNumberChanging(global::System.Byte value);
        partial void OnReviewNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Iteration
        {
            get
            {
                return _Iteration;
            }
            set
            {
                if (_Iteration != value)
                {
                    OnIterationChanging(value);
                    ReportPropertyChanging("Iteration");
                    _Iteration = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Iteration");
                    OnIterationChanged();
                }
            }
        }
        private global::System.Byte _Iteration;
        partial void OnIterationChanging(global::System.Byte value);
        partial void OnIterationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RequestedDueDate
        {
            get
            {
                return _RequestedDueDate;
            }
            set
            {
                OnRequestedDueDateChanging(value);
                ReportPropertyChanging("RequestedDueDate");
                _RequestedDueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestedDueDate");
                OnRequestedDueDateChanged();
            }
        }
        private global::System.DateTime _RequestedDueDate;
        partial void OnRequestedDueDateChanging(global::System.DateTime value);
        partial void OnRequestedDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Version
        {
            get
            {
                return StructuralObject.GetValidValue(_Version);
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Byte[] _Version;
        partial void OnVersionChanging(global::System.Byte[] value);
        partial void OnVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cfb.CandidatePortal.Data.CPModel", Name="GlobalSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GlobalSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GlobalSetting object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static GlobalSetting CreateGlobalSetting(global::System.String name, global::System.String value)
        {
            GlobalSetting globalSetting = new GlobalSetting();
            globalSetting.Name = name;
            globalSetting.Value = value;
            return globalSetting;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cfb.CandidatePortal.Data.CPModel", Name="TollingEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TollingEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TollingEvent object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static TollingEvent CreateTollingEvent(global::System.Byte eventId, global::System.String code)
        {
            TollingEvent tollingEvent = new TollingEvent();
            tollingEvent.EventId = eventId;
            tollingEvent.Code = code;
            return tollingEvent;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.Byte _EventId;
        partial void OnEventIdChanging(global::System.Byte value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cfb.CandidatePortal.Data.CPModel", "FK_TollingLetters_TollingEvents", "TollingLetters")]
        public EntityCollection<TollingLetter> TollingLetters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TollingLetter>("Cfb.CandidatePortal.Data.CPModel.FK_TollingLetters_TollingEvents", "TollingLetters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TollingLetter>("Cfb.CandidatePortal.Data.CPModel.FK_TollingLetters_TollingEvents", "TollingLetters", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cfb.CandidatePortal.Data.CPModel", Name="TollingLetter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TollingLetter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TollingLetter object.
        /// </summary>
        /// <param name="letterId">Initial value of the LetterId property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        public static TollingLetter CreateTollingLetter(global::System.Byte letterId, global::System.Byte sourceId, global::System.Byte eventId, global::System.Byte typeId)
        {
            TollingLetter tollingLetter = new TollingLetter();
            tollingLetter.LetterId = letterId;
            tollingLetter.SourceId = sourceId;
            tollingLetter.EventId = eventId;
            tollingLetter.TypeId = typeId;
            return tollingLetter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte LetterId
        {
            get
            {
                return _LetterId;
            }
            set
            {
                if (_LetterId != value)
                {
                    OnLetterIdChanging(value);
                    ReportPropertyChanging("LetterId");
                    _LetterId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LetterId");
                    OnLetterIdChanged();
                }
            }
        }
        private global::System.Byte _LetterId;
        partial void OnLetterIdChanging(global::System.Byte value);
        partial void OnLetterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Byte _SourceId;
        partial void OnSourceIdChanging(global::System.Byte value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private global::System.Byte _EventId;
        partial void OnEventIdChanging(global::System.Byte value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                OnTypeIdChanging(value);
                ReportPropertyChanging("TypeId");
                _TypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeId");
                OnTypeIdChanged();
            }
        }
        private global::System.Byte _TypeId;
        partial void OnTypeIdChanging(global::System.Byte value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cfb.CandidatePortal.Data.CPModel", "FK_TollingLetters_TollingEvents", "TollingEvents")]
        public TollingEvent TollingEvent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TollingEvent>("Cfb.CandidatePortal.Data.CPModel.FK_TollingLetters_TollingEvents", "TollingEvents").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TollingEvent>("Cfb.CandidatePortal.Data.CPModel.FK_TollingLetters_TollingEvents", "TollingEvents").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TollingEvent> TollingEventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TollingEvent>("Cfb.CandidatePortal.Data.CPModel.FK_TollingLetters_TollingEvents", "TollingEvents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TollingEvent>("Cfb.CandidatePortal.Data.CPModel.FK_TollingLetters_TollingEvents", "TollingEvents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cfb.CandidatePortal.Data.CPModel", "FK_TollingLetters_TollingSources", "TollingSources")]
        public TollingSource TollingSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TollingSource>("Cfb.CandidatePortal.Data.CPModel.FK_TollingLetters_TollingSources", "TollingSources").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TollingSource>("Cfb.CandidatePortal.Data.CPModel.FK_TollingLetters_TollingSources", "TollingSources").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TollingSource> TollingSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TollingSource>("Cfb.CandidatePortal.Data.CPModel.FK_TollingLetters_TollingSources", "TollingSources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TollingSource>("Cfb.CandidatePortal.Data.CPModel.FK_TollingLetters_TollingSources", "TollingSources", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cfb.CandidatePortal.Data.CPModel", "FK_TollingLetters_TollingTypes", "TollingTypes")]
        public TollingType TollingType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TollingType>("Cfb.CandidatePortal.Data.CPModel.FK_TollingLetters_TollingTypes", "TollingTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TollingType>("Cfb.CandidatePortal.Data.CPModel.FK_TollingLetters_TollingTypes", "TollingTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TollingType> TollingTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TollingType>("Cfb.CandidatePortal.Data.CPModel.FK_TollingLetters_TollingTypes", "TollingTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TollingType>("Cfb.CandidatePortal.Data.CPModel.FK_TollingLetters_TollingTypes", "TollingTypes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cfb.CandidatePortal.Data.CPModel", Name="TollingSource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TollingSource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TollingSource object.
        /// </summary>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static TollingSource CreateTollingSource(global::System.Byte sourceId, global::System.String code)
        {
            TollingSource tollingSource = new TollingSource();
            tollingSource.SourceId = sourceId;
            tollingSource.Code = code;
            return tollingSource;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                if (_SourceId != value)
                {
                    OnSourceIdChanging(value);
                    ReportPropertyChanging("SourceId");
                    _SourceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SourceId");
                    OnSourceIdChanged();
                }
            }
        }
        private global::System.Byte _SourceId;
        partial void OnSourceIdChanging(global::System.Byte value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cfb.CandidatePortal.Data.CPModel", "FK_TollingLetters_TollingSources", "TollingLetters")]
        public EntityCollection<TollingLetter> TollingLetters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TollingLetter>("Cfb.CandidatePortal.Data.CPModel.FK_TollingLetters_TollingSources", "TollingLetters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TollingLetter>("Cfb.CandidatePortal.Data.CPModel.FK_TollingLetters_TollingSources", "TollingLetters", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cfb.CandidatePortal.Data.CPModel", Name="TollingType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TollingType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TollingType object.
        /// </summary>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static TollingType CreateTollingType(global::System.Byte typeId, global::System.String code)
        {
            TollingType tollingType = new TollingType();
            tollingType.TypeId = typeId;
            tollingType.Code = code;
            return tollingType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                if (_TypeId != value)
                {
                    OnTypeIdChanging(value);
                    ReportPropertyChanging("TypeId");
                    _TypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TypeId");
                    OnTypeIdChanged();
                }
            }
        }
        private global::System.Byte _TypeId;
        partial void OnTypeIdChanging(global::System.Byte value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cfb.CandidatePortal.Data.CPModel", "FK_TollingLetters_TollingTypes", "TollingLetters")]
        public EntityCollection<TollingLetter> TollingLetters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TollingLetter>("Cfb.CandidatePortal.Data.CPModel.FK_TollingLetters_TollingTypes", "TollingLetters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TollingLetter>("Cfb.CandidatePortal.Data.CPModel.FK_TollingLetters_TollingTypes", "TollingLetters", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
