//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Cfb.CandidatePortal.Data.CmoModel", "FK_CmoAttachments_CmoMessages", "CmoMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cfb.CandidatePortal.Data.CmoMessage), "CmoAttachment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cfb.CandidatePortal.Data.CmoAttachment), true)]
[assembly: EdmRelationshipAttribute("Cfb.CandidatePortal.Data.CmoModel", "FK_CmoAuditReviews_CmoMessages", "CmoMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cfb.CandidatePortal.Data.CmoMessage), "CmoAuditReview", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cfb.CandidatePortal.Data.CmoAuditReview), true)]
[assembly: EdmRelationshipAttribute("Cfb.CandidatePortal.Data.CmoModel", "FK_CmoMessages_CmoCategories", "CmoCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cfb.CandidatePortal.Data.CmoCategory), "CmoMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cfb.CandidatePortal.Data.CmoMessage))]
[assembly: EdmRelationshipAttribute("Cfb.CandidatePortal.Data.CmoModel", "FK_CmoPostElectionRequests_CmoMessages", "CmoMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cfb.CandidatePortal.Data.CmoMessage), "CmoPostElectionRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cfb.CandidatePortal.Data.CmoPostElectionRequest), true)]
[assembly: EdmRelationshipAttribute("Cfb.CandidatePortal.Data.CmoModel", "FK_CmoTollingLetters_CmoMessages", "CmoMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cfb.CandidatePortal.Data.CmoMessage), "CmoTollingLetter", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cfb.CandidatePortal.Data.CmoTollingLetter), true)]

#endregion

namespace Cfb.CandidatePortal.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CmoEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CmoEntities object using the connection string found in the 'CmoEntities' section of the application configuration file.
        /// </summary>
        public CmoEntities() : base("name=CmoEntities", "CmoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CmoEntities object.
        /// </summary>
        public CmoEntities(string connectionString) : base(connectionString, "CmoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CmoEntities object.
        /// </summary>
        public CmoEntities(EntityConnection connection) : base(connection, "CmoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CmoAttachment> CmoAttachments
        {
            get
            {
                if ((_CmoAttachments == null))
                {
                    _CmoAttachments = base.CreateObjectSet<CmoAttachment>("CmoAttachments");
                }
                return _CmoAttachments;
            }
        }
        private ObjectSet<CmoAttachment> _CmoAttachments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CmoAuditReview> CmoAuditReviews
        {
            get
            {
                if ((_CmoAuditReviews == null))
                {
                    _CmoAuditReviews = base.CreateObjectSet<CmoAuditReview>("CmoAuditReviews");
                }
                return _CmoAuditReviews;
            }
        }
        private ObjectSet<CmoAuditReview> _CmoAuditReviews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CmoCategory> CmoCategories
        {
            get
            {
                if ((_CmoCategories == null))
                {
                    _CmoCategories = base.CreateObjectSet<CmoCategory>("CmoCategories");
                }
                return _CmoCategories;
            }
        }
        private ObjectSet<CmoCategory> _CmoCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CmoMessage> CmoMessages
        {
            get
            {
                if ((_CmoMessages == null))
                {
                    _CmoMessages = base.CreateObjectSet<CmoMessage>("CmoMessages");
                }
                return _CmoMessages;
            }
        }
        private ObjectSet<CmoMessage> _CmoMessages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CmoPostElectionRequest> CmoPostElectionRequests
        {
            get
            {
                if ((_CmoPostElectionRequests == null))
                {
                    _CmoPostElectionRequests = base.CreateObjectSet<CmoPostElectionRequest>("CmoPostElectionRequests");
                }
                return _CmoPostElectionRequests;
            }
        }
        private ObjectSet<CmoPostElectionRequest> _CmoPostElectionRequests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CmoTollingLetter> CmoTollingLetters
        {
            get
            {
                if ((_CmoTollingLetters == null))
                {
                    _CmoTollingLetters = base.CreateObjectSet<CmoTollingLetter>("CmoTollingLetters");
                }
                return _CmoTollingLetters;
            }
        }
        private ObjectSet<CmoTollingLetter> _CmoTollingLetters;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CmoAttachments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCmoAttachments(CmoAttachment cmoAttachment)
        {
            base.AddObject("CmoAttachments", cmoAttachment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CmoAuditReviews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCmoAuditReviews(CmoAuditReview cmoAuditReview)
        {
            base.AddObject("CmoAuditReviews", cmoAuditReview);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CmoCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCmoCategories(CmoCategory cmoCategory)
        {
            base.AddObject("CmoCategories", cmoCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CmoMessages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCmoMessages(CmoMessage cmoMessage)
        {
            base.AddObject("CmoMessages", cmoMessage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CmoPostElectionRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCmoPostElectionRequests(CmoPostElectionRequest cmoPostElectionRequest)
        {
            base.AddObject("CmoPostElectionRequests", cmoPostElectionRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CmoTollingLetters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCmoTollingLetters(CmoTollingLetter cmoTollingLetter)
        {
            base.AddObject("CmoTollingLetters", cmoTollingLetter);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="candidateId">No Metadata Documentation available.</param>
        /// <param name="messageId">No Metadata Documentation available.</param>
        /// <param name="archiveUserName">No Metadata Documentation available.</param>
        /// <param name="archived">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> CmoArchiveMessage(global::System.String candidateId, Nullable<global::System.Int32> messageId, global::System.String archiveUserName, Nullable<global::System.Boolean> archived, global::System.Byte[] version)
        {
            ObjectParameter candidateIdParameter;
            if (candidateId != null)
            {
                candidateIdParameter = new ObjectParameter("candidateId", candidateId);
            }
            else
            {
                candidateIdParameter = new ObjectParameter("candidateId", typeof(global::System.String));
            }
    
            ObjectParameter messageIdParameter;
            if (messageId.HasValue)
            {
                messageIdParameter = new ObjectParameter("messageId", messageId);
            }
            else
            {
                messageIdParameter = new ObjectParameter("messageId", typeof(global::System.Int32));
            }
    
            ObjectParameter archiveUserNameParameter;
            if (archiveUserName != null)
            {
                archiveUserNameParameter = new ObjectParameter("archiveUserName", archiveUserName);
            }
            else
            {
                archiveUserNameParameter = new ObjectParameter("archiveUserName", typeof(global::System.String));
            }
    
            ObjectParameter archivedParameter;
            if (archived.HasValue)
            {
                archivedParameter = new ObjectParameter("archived", archived);
            }
            else
            {
                archivedParameter = new ObjectParameter("archived", typeof(global::System.Boolean));
            }
    
            ObjectParameter versionParameter;
            if (version != null)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("CmoArchiveMessage", candidateIdParameter, messageIdParameter, archiveUserNameParameter, archivedParameter, versionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="candidateId">No Metadata Documentation available.</param>
        /// <param name="messageId">No Metadata Documentation available.</param>
        /// <param name="followUpUserName">No Metadata Documentation available.</param>
        /// <param name="followUp">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> CmoFollowUpMessage(global::System.String candidateId, Nullable<global::System.Int32> messageId, global::System.String followUpUserName, Nullable<global::System.Boolean> followUp, global::System.Byte[] version)
        {
            ObjectParameter candidateIdParameter;
            if (candidateId != null)
            {
                candidateIdParameter = new ObjectParameter("candidateId", candidateId);
            }
            else
            {
                candidateIdParameter = new ObjectParameter("candidateId", typeof(global::System.String));
            }
    
            ObjectParameter messageIdParameter;
            if (messageId.HasValue)
            {
                messageIdParameter = new ObjectParameter("messageId", messageId);
            }
            else
            {
                messageIdParameter = new ObjectParameter("messageId", typeof(global::System.Int32));
            }
    
            ObjectParameter followUpUserNameParameter;
            if (followUpUserName != null)
            {
                followUpUserNameParameter = new ObjectParameter("followUpUserName", followUpUserName);
            }
            else
            {
                followUpUserNameParameter = new ObjectParameter("followUpUserName", typeof(global::System.String));
            }
    
            ObjectParameter followUpParameter;
            if (followUp.HasValue)
            {
                followUpParameter = new ObjectParameter("followUp", followUp);
            }
            else
            {
                followUpParameter = new ObjectParameter("followUp", typeof(global::System.Boolean));
            }
    
            ObjectParameter versionParameter;
            if (version != null)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("CmoFollowUpMessage", candidateIdParameter, messageIdParameter, followUpUserNameParameter, followUpParameter, versionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="candidateId">No Metadata Documentation available.</param>
        /// <param name="messageId">No Metadata Documentation available.</param>
        /// <param name="openUserName">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> CmoOpenMessage(global::System.String candidateId, Nullable<global::System.Int32> messageId, global::System.String openUserName, global::System.Byte[] version)
        {
            ObjectParameter candidateIdParameter;
            if (candidateId != null)
            {
                candidateIdParameter = new ObjectParameter("candidateId", candidateId);
            }
            else
            {
                candidateIdParameter = new ObjectParameter("candidateId", typeof(global::System.String));
            }
    
            ObjectParameter messageIdParameter;
            if (messageId.HasValue)
            {
                messageIdParameter = new ObjectParameter("messageId", messageId);
            }
            else
            {
                messageIdParameter = new ObjectParameter("messageId", typeof(global::System.Int32));
            }
    
            ObjectParameter openUserNameParameter;
            if (openUserName != null)
            {
                openUserNameParameter = new ObjectParameter("openUserName", openUserName);
            }
            else
            {
                openUserNameParameter = new ObjectParameter("openUserName", typeof(global::System.String));
            }
    
            ObjectParameter versionParameter;
            if (version != null)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("CmoOpenMessage", candidateIdParameter, messageIdParameter, openUserNameParameter, versionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="candidateId">No Metadata Documentation available.</param>
        /// <param name="messageId">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> CmoPostMessage(global::System.String candidateId, Nullable<global::System.Int32> messageId, global::System.Byte[] version)
        {
            ObjectParameter candidateIdParameter;
            if (candidateId != null)
            {
                candidateIdParameter = new ObjectParameter("candidateId", candidateId);
            }
            else
            {
                candidateIdParameter = new ObjectParameter("candidateId", typeof(global::System.String));
            }
    
            ObjectParameter messageIdParameter;
            if (messageId.HasValue)
            {
                messageIdParameter = new ObjectParameter("messageId", messageId);
            }
            else
            {
                messageIdParameter = new ObjectParameter("messageId", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version != null)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("CmoPostMessage", candidateIdParameter, messageIdParameter, versionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="candidateId">No Metadata Documentation available.</param>
        /// <param name="messageId">No Metadata Documentation available.</param>
        /// <param name="electionCycle">No Metadata Documentation available.</param>
        /// <param name="title">No Metadata Documentation available.</param>
        /// <param name="body">No Metadata Documentation available.</param>
        /// <param name="creatorADUserName">No Metadata Documentation available.</param>
        /// <param name="openReceiptEmail">No Metadata Documentation available.</param>
        /// <param name="category">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> CmoSaveMessage(global::System.String candidateId, Nullable<global::System.Int32> messageId, global::System.String electionCycle, global::System.String title, global::System.String body, global::System.String creatorADUserName, global::System.String openReceiptEmail, Nullable<global::System.Byte> category, global::System.Byte[] version)
        {
            ObjectParameter candidateIdParameter;
            if (candidateId != null)
            {
                candidateIdParameter = new ObjectParameter("candidateId", candidateId);
            }
            else
            {
                candidateIdParameter = new ObjectParameter("candidateId", typeof(global::System.String));
            }
    
            ObjectParameter messageIdParameter;
            if (messageId.HasValue)
            {
                messageIdParameter = new ObjectParameter("messageId", messageId);
            }
            else
            {
                messageIdParameter = new ObjectParameter("messageId", typeof(global::System.Int32));
            }
    
            ObjectParameter electionCycleParameter;
            if (electionCycle != null)
            {
                electionCycleParameter = new ObjectParameter("electionCycle", electionCycle);
            }
            else
            {
                electionCycleParameter = new ObjectParameter("electionCycle", typeof(global::System.String));
            }
    
            ObjectParameter titleParameter;
            if (title != null)
            {
                titleParameter = new ObjectParameter("title", title);
            }
            else
            {
                titleParameter = new ObjectParameter("title", typeof(global::System.String));
            }
    
            ObjectParameter bodyParameter;
            if (body != null)
            {
                bodyParameter = new ObjectParameter("body", body);
            }
            else
            {
                bodyParameter = new ObjectParameter("body", typeof(global::System.String));
            }
    
            ObjectParameter creatorADUserNameParameter;
            if (creatorADUserName != null)
            {
                creatorADUserNameParameter = new ObjectParameter("creatorADUserName", creatorADUserName);
            }
            else
            {
                creatorADUserNameParameter = new ObjectParameter("creatorADUserName", typeof(global::System.String));
            }
    
            ObjectParameter openReceiptEmailParameter;
            if (openReceiptEmail != null)
            {
                openReceiptEmailParameter = new ObjectParameter("openReceiptEmail", openReceiptEmail);
            }
            else
            {
                openReceiptEmailParameter = new ObjectParameter("openReceiptEmail", typeof(global::System.String));
            }
    
            ObjectParameter categoryParameter;
            if (category.HasValue)
            {
                categoryParameter = new ObjectParameter("category", category);
            }
            else
            {
                categoryParameter = new ObjectParameter("category", typeof(global::System.Byte));
            }
    
            ObjectParameter versionParameter;
            if (version != null)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("CmoSaveMessage", candidateIdParameter, messageIdParameter, electionCycleParameter, titleParameter, bodyParameter, creatorADUserNameParameter, openReceiptEmailParameter, categoryParameter, versionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="candidateId">No Metadata Documentation available.</param>
        /// <param name="electionCycle">No Metadata Documentation available.</param>
        /// <param name="isFar">No Metadata Documentation available.</param>
        public ObjectResult<CmoTollingLetter> CmoGetCandidateTollingEvents(global::System.String candidateId, global::System.String electionCycle, Nullable<global::System.Boolean> isFar)
        {
            ObjectParameter candidateIdParameter;
            if (candidateId != null)
            {
                candidateIdParameter = new ObjectParameter("candidateId", candidateId);
            }
            else
            {
                candidateIdParameter = new ObjectParameter("candidateId", typeof(global::System.String));
            }
    
            ObjectParameter electionCycleParameter;
            if (electionCycle != null)
            {
                electionCycleParameter = new ObjectParameter("electionCycle", electionCycle);
            }
            else
            {
                electionCycleParameter = new ObjectParameter("electionCycle", typeof(global::System.String));
            }
    
            ObjectParameter isFarParameter;
            if (isFar.HasValue)
            {
                isFarParameter = new ObjectParameter("isFar", isFar);
            }
            else
            {
                isFarParameter = new ObjectParameter("isFar", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<CmoTollingLetter>("CmoGetCandidateTollingEvents", candidateIdParameter, electionCycleParameter, isFarParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="candidateId">No Metadata Documentation available.</param>
        /// <param name="electionCycle">No Metadata Documentation available.</param>
        /// <param name="isFar">No Metadata Documentation available.</param>
        public ObjectResult<CmoTollingLetter> CmoGetCandidateTollingEvents(global::System.String candidateId, global::System.String electionCycle, Nullable<global::System.Boolean> isFar, MergeOption mergeOption)
        {
            ObjectParameter candidateIdParameter;
            if (candidateId != null)
            {
                candidateIdParameter = new ObjectParameter("candidateId", candidateId);
            }
            else
            {
                candidateIdParameter = new ObjectParameter("candidateId", typeof(global::System.String));
            }
    
            ObjectParameter electionCycleParameter;
            if (electionCycle != null)
            {
                electionCycleParameter = new ObjectParameter("electionCycle", electionCycle);
            }
            else
            {
                electionCycleParameter = new ObjectParameter("electionCycle", typeof(global::System.String));
            }
    
            ObjectParameter isFarParameter;
            if (isFar.HasValue)
            {
                isFarParameter = new ObjectParameter("isFar", isFar);
            }
            else
            {
                isFarParameter = new ObjectParameter("isFar", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<CmoTollingLetter>("CmoGetCandidateTollingEvents", mergeOption, candidateIdParameter, electionCycleParameter, isFarParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="candidateId">No Metadata Documentation available.</param>
        /// <param name="messageId">No Metadata Documentation available.</param>
        /// <param name="attachmentId">No Metadata Documentation available.</param>
        /// <param name="attachmentName">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> CmoSaveAttachment(global::System.String candidateId, Nullable<global::System.Int32> messageId, Nullable<global::System.Byte> attachmentId, global::System.String attachmentName)
        {
            ObjectParameter candidateIdParameter;
            if (candidateId != null)
            {
                candidateIdParameter = new ObjectParameter("candidateId", candidateId);
            }
            else
            {
                candidateIdParameter = new ObjectParameter("candidateId", typeof(global::System.String));
            }
    
            ObjectParameter messageIdParameter;
            if (messageId.HasValue)
            {
                messageIdParameter = new ObjectParameter("messageId", messageId);
            }
            else
            {
                messageIdParameter = new ObjectParameter("messageId", typeof(global::System.Int32));
            }
    
            ObjectParameter attachmentIdParameter;
            if (attachmentId.HasValue)
            {
                attachmentIdParameter = new ObjectParameter("attachmentId", attachmentId);
            }
            else
            {
                attachmentIdParameter = new ObjectParameter("attachmentId", typeof(global::System.Byte));
            }
    
            ObjectParameter attachmentNameParameter;
            if (attachmentName != null)
            {
                attachmentNameParameter = new ObjectParameter("attachmentName", attachmentName);
            }
            else
            {
                attachmentNameParameter = new ObjectParameter("attachmentName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("CmoSaveAttachment", candidateIdParameter, messageIdParameter, attachmentIdParameter, attachmentNameParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cfb.CandidatePortal.Data.CmoModel", Name="CmoAttachment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CmoAttachment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CmoAttachment object.
        /// </summary>
        /// <param name="candidateId">Initial value of the CandidateId property.</param>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="attachmentId">Initial value of the AttachmentId property.</param>
        /// <param name="attachmentName">Initial value of the AttachmentName property.</param>
        public static CmoAttachment CreateCmoAttachment(global::System.String candidateId, global::System.Int32 messageId, global::System.Byte attachmentId, global::System.String attachmentName)
        {
            CmoAttachment cmoAttachment = new CmoAttachment();
            cmoAttachment.CandidateId = candidateId;
            cmoAttachment.MessageId = messageId;
            cmoAttachment.AttachmentId = attachmentId;
            cmoAttachment.AttachmentName = attachmentName;
            return cmoAttachment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CandidateId
        {
            get
            {
                return _CandidateId;
            }
            set
            {
                if (_CandidateId != value)
                {
                    OnCandidateIdChanging(value);
                    ReportPropertyChanging("CandidateId");
                    _CandidateId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CandidateId");
                    OnCandidateIdChanged();
                }
            }
        }
        private global::System.String _CandidateId;
        partial void OnCandidateIdChanging(global::System.String value);
        partial void OnCandidateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte AttachmentId
        {
            get
            {
                return _AttachmentId;
            }
            set
            {
                if (_AttachmentId != value)
                {
                    OnAttachmentIdChanging(value);
                    ReportPropertyChanging("AttachmentId");
                    _AttachmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttachmentId");
                    OnAttachmentIdChanged();
                }
            }
        }
        private global::System.Byte _AttachmentId;
        partial void OnAttachmentIdChanging(global::System.Byte value);
        partial void OnAttachmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AttachmentName
        {
            get
            {
                return _AttachmentName;
            }
            set
            {
                OnAttachmentNameChanging(value);
                ReportPropertyChanging("AttachmentName");
                _AttachmentName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AttachmentName");
                OnAttachmentNameChanged();
            }
        }
        private global::System.String _AttachmentName;
        partial void OnAttachmentNameChanging(global::System.String value);
        partial void OnAttachmentNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cfb.CandidatePortal.Data.CmoModel", "FK_CmoAttachments_CmoMessages", "CmoMessage")]
        public CmoMessage CmoMessage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoMessage>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoAttachments_CmoMessages", "CmoMessage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoMessage>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoAttachments_CmoMessages", "CmoMessage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CmoMessage> CmoMessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoMessage>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoAttachments_CmoMessages", "CmoMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CmoMessage>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoAttachments_CmoMessages", "CmoMessage", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cfb.CandidatePortal.Data.CmoModel", Name="CmoAuditReview")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CmoAuditReview : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CmoAuditReview object.
        /// </summary>
        /// <param name="candidateId">Initial value of the CandidateId property.</param>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="reviewNumber">Initial value of the ReviewNumber property.</param>
        public static CmoAuditReview CreateCmoAuditReview(global::System.String candidateId, global::System.Int32 messageId, global::System.Byte reviewNumber)
        {
            CmoAuditReview cmoAuditReview = new CmoAuditReview();
            cmoAuditReview.CandidateId = candidateId;
            cmoAuditReview.MessageId = messageId;
            cmoAuditReview.ReviewNumber = reviewNumber;
            return cmoAuditReview;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CandidateId
        {
            get
            {
                return _CandidateId;
            }
            set
            {
                if (_CandidateId != value)
                {
                    OnCandidateIdChanging(value);
                    ReportPropertyChanging("CandidateId");
                    _CandidateId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CandidateId");
                    OnCandidateIdChanged();
                }
            }
        }
        private global::System.String _CandidateId;
        partial void OnCandidateIdChanging(global::System.String value);
        partial void OnCandidateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ReviewNumber
        {
            get
            {
                return _ReviewNumber;
            }
            set
            {
                OnReviewNumberChanging(value);
                ReportPropertyChanging("ReviewNumber");
                _ReviewNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReviewNumber");
                OnReviewNumberChanged();
            }
        }
        private global::System.Byte _ReviewNumber;
        partial void OnReviewNumberChanging(global::System.Byte value);
        partial void OnReviewNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cfb.CandidatePortal.Data.CmoModel", "FK_CmoAuditReviews_CmoMessages", "CmoMessage")]
        public CmoMessage CmoMessage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoMessage>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoAuditReviews_CmoMessages", "CmoMessage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoMessage>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoAuditReviews_CmoMessages", "CmoMessage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CmoMessage> CmoMessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoMessage>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoAuditReviews_CmoMessages", "CmoMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CmoMessage>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoAuditReviews_CmoMessages", "CmoMessage", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cfb.CandidatePortal.Data.CmoModel", Name="CmoCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CmoCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CmoCategory object.
        /// </summary>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        /// <param name="hidden">Initial value of the Hidden property.</param>
        /// <param name="templateEditable">Initial value of the TemplateEditable property.</param>
        public static CmoCategory CreateCmoCategory(global::System.Byte categoryId, global::System.String categoryName, global::System.Boolean hidden, global::System.Boolean templateEditable)
        {
            CmoCategory cmoCategory = new CmoCategory();
            cmoCategory.CategoryId = categoryId;
            cmoCategory.CategoryName = categoryName;
            cmoCategory.Hidden = hidden;
            cmoCategory.TemplateEditable = templateEditable;
            return cmoCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Byte _CategoryId;
        partial void OnCategoryIdChanging(global::System.Byte value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Hidden
        {
            get
            {
                return _Hidden;
            }
            set
            {
                OnHiddenChanging(value);
                ReportPropertyChanging("Hidden");
                _Hidden = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hidden");
                OnHiddenChanged();
            }
        }
        private global::System.Boolean _Hidden;
        partial void OnHiddenChanging(global::System.Boolean value);
        partial void OnHiddenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TemplateTitle
        {
            get
            {
                return _TemplateTitle;
            }
            set
            {
                OnTemplateTitleChanging(value);
                ReportPropertyChanging("TemplateTitle");
                _TemplateTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TemplateTitle");
                OnTemplateTitleChanged();
            }
        }
        private global::System.String _TemplateTitle;
        partial void OnTemplateTitleChanging(global::System.String value);
        partial void OnTemplateTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TemplateBody
        {
            get
            {
                return _TemplateBody;
            }
            set
            {
                OnTemplateBodyChanging(value);
                ReportPropertyChanging("TemplateBody");
                _TemplateBody = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TemplateBody");
                OnTemplateBodyChanged();
            }
        }
        private global::System.String _TemplateBody;
        partial void OnTemplateBodyChanging(global::System.String value);
        partial void OnTemplateBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TemplateEditable
        {
            get
            {
                return _TemplateEditable;
            }
            set
            {
                OnTemplateEditableChanging(value);
                ReportPropertyChanging("TemplateEditable");
                _TemplateEditable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateEditable");
                OnTemplateEditableChanged();
            }
        }
        private global::System.Boolean _TemplateEditable;
        partial void OnTemplateEditableChanging(global::System.Boolean value);
        partial void OnTemplateEditableChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cfb.CandidatePortal.Data.CmoModel", "FK_CmoMessages_CmoCategories", "CmoMessage")]
        public EntityCollection<CmoMessage> CmoMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CmoMessage>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoMessages_CmoCategories", "CmoMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CmoMessage>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoMessages_CmoCategories", "CmoMessage", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cfb.CandidatePortal.Data.CmoModel", Name="CmoMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CmoMessage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CmoMessage object.
        /// </summary>
        /// <param name="candidateId">Initial value of the CandidateId property.</param>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="electionCycle">Initial value of the ElectionCycle property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        /// <param name="creatorADUserName">Initial value of the CreatorADUserName property.</param>
        /// <param name="followUp">Initial value of the FollowUp property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static CmoMessage CreateCmoMessage(global::System.String candidateId, global::System.Int32 messageId, global::System.String electionCycle, global::System.String title, global::System.String body, global::System.String creatorADUserName, global::System.Boolean followUp, global::System.Byte[] version)
        {
            CmoMessage cmoMessage = new CmoMessage();
            cmoMessage.CandidateId = candidateId;
            cmoMessage.MessageId = messageId;
            cmoMessage.ElectionCycle = electionCycle;
            cmoMessage.Title = title;
            cmoMessage.Body = body;
            cmoMessage.CreatorADUserName = creatorADUserName;
            cmoMessage.FollowUp = followUp;
            cmoMessage.Version = version;
            return cmoMessage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CandidateId
        {
            get
            {
                return _CandidateId;
            }
            set
            {
                if (_CandidateId != value)
                {
                    OnCandidateIdChanging(value);
                    ReportPropertyChanging("CandidateId");
                    _CandidateId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CandidateId");
                    OnCandidateIdChanged();
                }
            }
        }
        private global::System.String _CandidateId;
        partial void OnCandidateIdChanging(global::System.String value);
        partial void OnCandidateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ElectionCycle
        {
            get
            {
                return _ElectionCycle;
            }
            set
            {
                OnElectionCycleChanging(value);
                ReportPropertyChanging("ElectionCycle");
                _ElectionCycle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ElectionCycle");
                OnElectionCycleChanged();
            }
        }
        private global::System.String _ElectionCycle;
        partial void OnElectionCycleChanging(global::System.String value);
        partial void OnElectionCycleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatorADUserName
        {
            get
            {
                return _CreatorADUserName;
            }
            set
            {
                OnCreatorADUserNameChanging(value);
                ReportPropertyChanging("CreatorADUserName");
                _CreatorADUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatorADUserName");
                OnCreatorADUserNameChanged();
            }
        }
        private global::System.String _CreatorADUserName;
        partial void OnCreatorADUserNameChanging(global::System.String value);
        partial void OnCreatorADUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OpenReceiptEmail
        {
            get
            {
                return _OpenReceiptEmail;
            }
            set
            {
                OnOpenReceiptEmailChanging(value);
                ReportPropertyChanging("OpenReceiptEmail");
                _OpenReceiptEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OpenReceiptEmail");
                OnOpenReceiptEmailChanged();
            }
        }
        private global::System.String _OpenReceiptEmail;
        partial void OnOpenReceiptEmailChanging(global::System.String value);
        partial void OnOpenReceiptEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PostDate
        {
            get
            {
                return _PostDate;
            }
            set
            {
                OnPostDateChanging(value);
                ReportPropertyChanging("PostDate");
                _PostDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostDate");
                OnPostDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PostDate;
        partial void OnPostDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OpenUserName
        {
            get
            {
                return _OpenUserName;
            }
            set
            {
                OnOpenUserNameChanging(value);
                ReportPropertyChanging("OpenUserName");
                _OpenUserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OpenUserName");
                OnOpenUserNameChanged();
            }
        }
        private global::System.String _OpenUserName;
        partial void OnOpenUserNameChanging(global::System.String value);
        partial void OnOpenUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OpenDate
        {
            get
            {
                return _OpenDate;
            }
            set
            {
                OnOpenDateChanging(value);
                ReportPropertyChanging("OpenDate");
                _OpenDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpenDate");
                OnOpenDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OpenDate;
        partial void OnOpenDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOpenDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ArchiveUserName
        {
            get
            {
                return _ArchiveUserName;
            }
            set
            {
                OnArchiveUserNameChanging(value);
                ReportPropertyChanging("ArchiveUserName");
                _ArchiveUserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ArchiveUserName");
                OnArchiveUserNameChanged();
            }
        }
        private global::System.String _ArchiveUserName;
        partial void OnArchiveUserNameChanging(global::System.String value);
        partial void OnArchiveUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ArchiveDate
        {
            get
            {
                return _ArchiveDate;
            }
            set
            {
                OnArchiveDateChanging(value);
                ReportPropertyChanging("ArchiveDate");
                _ArchiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArchiveDate");
                OnArchiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ArchiveDate;
        partial void OnArchiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnArchiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean FollowUp
        {
            get
            {
                return _FollowUp;
            }
            set
            {
                OnFollowUpChanging(value);
                ReportPropertyChanging("FollowUp");
                _FollowUp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FollowUp");
                OnFollowUpChanged();
            }
        }
        private global::System.Boolean _FollowUp;
        partial void OnFollowUpChanging(global::System.Boolean value);
        partial void OnFollowUpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FollowUpUserName
        {
            get
            {
                return _FollowUpUserName;
            }
            set
            {
                OnFollowUpUserNameChanging(value);
                ReportPropertyChanging("FollowUpUserName");
                _FollowUpUserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FollowUpUserName");
                OnFollowUpUserNameChanged();
            }
        }
        private global::System.String _FollowUpUserName;
        partial void OnFollowUpUserNameChanging(global::System.String value);
        partial void OnFollowUpUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FollowUpDate
        {
            get
            {
                return _FollowUpDate;
            }
            set
            {
                OnFollowUpDateChanging(value);
                ReportPropertyChanging("FollowUpDate");
                _FollowUpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FollowUpDate");
                OnFollowUpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FollowUpDate;
        partial void OnFollowUpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFollowUpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Version
        {
            get
            {
                return StructuralObject.GetValidValue(_Version);
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Byte[] _Version;
        partial void OnVersionChanging(global::System.Byte[] value);
        partial void OnVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cfb.CandidatePortal.Data.CmoModel", "FK_CmoAttachments_CmoMessages", "CmoAttachment")]
        public EntityCollection<CmoAttachment> CmoAttachments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CmoAttachment>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoAttachments_CmoMessages", "CmoAttachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CmoAttachment>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoAttachments_CmoMessages", "CmoAttachment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cfb.CandidatePortal.Data.CmoModel", "FK_CmoAuditReviews_CmoMessages", "CmoAuditReview")]
        public CmoAuditReview CmoAuditReview
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoAuditReview>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoAuditReviews_CmoMessages", "CmoAuditReview").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoAuditReview>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoAuditReviews_CmoMessages", "CmoAuditReview").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CmoAuditReview> CmoAuditReviewReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoAuditReview>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoAuditReviews_CmoMessages", "CmoAuditReview");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CmoAuditReview>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoAuditReviews_CmoMessages", "CmoAuditReview", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cfb.CandidatePortal.Data.CmoModel", "FK_CmoMessages_CmoCategories", "CmoCategory")]
        public CmoCategory CmoCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoCategory>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoMessages_CmoCategories", "CmoCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoCategory>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoMessages_CmoCategories", "CmoCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CmoCategory> CmoCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoCategory>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoMessages_CmoCategories", "CmoCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CmoCategory>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoMessages_CmoCategories", "CmoCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cfb.CandidatePortal.Data.CmoModel", "FK_CmoPostElectionRequests_CmoMessages", "CmoPostElectionRequest")]
        public CmoPostElectionRequest CmoPostElectionRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoPostElectionRequest>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoPostElectionRequests_CmoMessages", "CmoPostElectionRequest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoPostElectionRequest>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoPostElectionRequests_CmoMessages", "CmoPostElectionRequest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CmoPostElectionRequest> CmoPostElectionRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoPostElectionRequest>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoPostElectionRequests_CmoMessages", "CmoPostElectionRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CmoPostElectionRequest>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoPostElectionRequests_CmoMessages", "CmoPostElectionRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cfb.CandidatePortal.Data.CmoModel", "FK_CmoTollingLetters_CmoMessages", "CmoTollingLetter")]
        public CmoTollingLetter CmoTollingLetter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoTollingLetter>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoTollingLetters_CmoMessages", "CmoTollingLetter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoTollingLetter>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoTollingLetters_CmoMessages", "CmoTollingLetter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CmoTollingLetter> CmoTollingLetterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoTollingLetter>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoTollingLetters_CmoMessages", "CmoTollingLetter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CmoTollingLetter>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoTollingLetters_CmoMessages", "CmoTollingLetter", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cfb.CandidatePortal.Data.CmoModel", Name="CmoPostElectionRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CmoPostElectionRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CmoPostElectionRequest object.
        /// </summary>
        /// <param name="candidateId">Initial value of the CandidateId property.</param>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="repost">Initial value of the Repost property.</param>
        /// <param name="secondRequest">Initial value of the SecondRequest property.</param>
        public static CmoPostElectionRequest CreateCmoPostElectionRequest(global::System.String candidateId, global::System.Int32 messageId, global::System.Boolean repost, global::System.Boolean secondRequest)
        {
            CmoPostElectionRequest cmoPostElectionRequest = new CmoPostElectionRequest();
            cmoPostElectionRequest.CandidateId = candidateId;
            cmoPostElectionRequest.MessageId = messageId;
            cmoPostElectionRequest.Repost = repost;
            cmoPostElectionRequest.SecondRequest = secondRequest;
            return cmoPostElectionRequest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CandidateId
        {
            get
            {
                return _CandidateId;
            }
            set
            {
                if (_CandidateId != value)
                {
                    OnCandidateIdChanging(value);
                    ReportPropertyChanging("CandidateId");
                    _CandidateId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CandidateId");
                    OnCandidateIdChanged();
                }
            }
        }
        private global::System.String _CandidateId;
        partial void OnCandidateIdChanging(global::System.String value);
        partial void OnCandidateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Repost
        {
            get
            {
                return _Repost;
            }
            set
            {
                OnRepostChanging(value);
                ReportPropertyChanging("Repost");
                _Repost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Repost");
                OnRepostChanged();
            }
        }
        private global::System.Boolean _Repost;
        partial void OnRepostChanging(global::System.Boolean value);
        partial void OnRepostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SecondRequest
        {
            get
            {
                return _SecondRequest;
            }
            set
            {
                OnSecondRequestChanging(value);
                ReportPropertyChanging("SecondRequest");
                _SecondRequest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecondRequest");
                OnSecondRequestChanged();
            }
        }
        private global::System.Boolean _SecondRequest;
        partial void OnSecondRequestChanging(global::System.Boolean value);
        partial void OnSecondRequestChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cfb.CandidatePortal.Data.CmoModel", "FK_CmoPostElectionRequests_CmoMessages", "CmoMessage")]
        public CmoMessage CmoMessage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoMessage>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoPostElectionRequests_CmoMessages", "CmoMessage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoMessage>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoPostElectionRequests_CmoMessages", "CmoMessage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CmoMessage> CmoMessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoMessage>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoPostElectionRequests_CmoMessages", "CmoMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CmoMessage>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoPostElectionRequests_CmoMessages", "CmoMessage", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cfb.CandidatePortal.Data.CmoModel", Name="CmoTollingLetter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CmoTollingLetter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CmoTollingLetter object.
        /// </summary>
        /// <param name="candidateId">Initial value of the CandidateId property.</param>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="eventNumber">Initial value of the EventNumber property.</param>
        /// <param name="letterId">Initial value of the LetterId property.</param>
        public static CmoTollingLetter CreateCmoTollingLetter(global::System.String candidateId, global::System.Int32 messageId, global::System.Int32 eventNumber, global::System.Byte letterId)
        {
            CmoTollingLetter cmoTollingLetter = new CmoTollingLetter();
            cmoTollingLetter.CandidateId = candidateId;
            cmoTollingLetter.MessageId = messageId;
            cmoTollingLetter.EventNumber = eventNumber;
            cmoTollingLetter.LetterId = letterId;
            return cmoTollingLetter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CandidateId
        {
            get
            {
                return _CandidateId;
            }
            set
            {
                if (_CandidateId != value)
                {
                    OnCandidateIdChanging(value);
                    ReportPropertyChanging("CandidateId");
                    _CandidateId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CandidateId");
                    OnCandidateIdChanged();
                }
            }
        }
        private global::System.String _CandidateId;
        partial void OnCandidateIdChanging(global::System.String value);
        partial void OnCandidateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventNumber
        {
            get
            {
                return _EventNumber;
            }
            set
            {
                OnEventNumberChanging(value);
                ReportPropertyChanging("EventNumber");
                _EventNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventNumber");
                OnEventNumberChanged();
            }
        }
        private global::System.Int32 _EventNumber;
        partial void OnEventNumberChanging(global::System.Int32 value);
        partial void OnEventNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte LetterId
        {
            get
            {
                return _LetterId;
            }
            set
            {
                OnLetterIdChanging(value);
                ReportPropertyChanging("LetterId");
                _LetterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LetterId");
                OnLetterIdChanged();
            }
        }
        private global::System.Byte _LetterId;
        partial void OnLetterIdChanging(global::System.Byte value);
        partial void OnLetterIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cfb.CandidatePortal.Data.CmoModel", "FK_CmoTollingLetters_CmoMessages", "CmoMessage")]
        public CmoMessage CmoMessage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoMessage>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoTollingLetters_CmoMessages", "CmoMessage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoMessage>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoTollingLetters_CmoMessages", "CmoMessage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CmoMessage> CmoMessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmoMessage>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoTollingLetters_CmoMessages", "CmoMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CmoMessage>("Cfb.CandidatePortal.Data.CmoModel.FK_CmoTollingLetters_CmoMessages", "CmoMessage", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
