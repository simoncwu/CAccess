<?xml version="1.0" encoding="utf-8"?>
<!-- _lcid="1033" _version="12.0.4518.1015" _dal="1" -->
<!-- _LocalBinding -->
<root>
  <!-- 
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value xml:space="preserve">[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value xml:space="preserve">[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple 
    name/value pairs.

    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.

    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value xml:space="preserve">text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value xml:space="preserve">2.0</value>
  </resheader>
  <resheader name="reader">
    <value xml:space="preserve">System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value xml:space="preserve">System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SPSearchServiceInstanceSettings_SearchAdminBreadcrumb">
    <value xml:space="preserve">Windows SharePoint Services Search Service Settings</value>
  </data>
  <data name="SPSearchServiceInstance_PageTitle_Text">
    <value xml:space="preserve">Configure Windows SharePoint Services Search Service Settings on server {0}</value>
  </data>
  <data name="SPSearchServiceInstance_PageHeader_Text">
    <value xml:space="preserve">Configure Windows SharePoint Services Search Service Settings on server {0}</value>
  </data>
  <data name="SPSearchServiceInstance_PageDescription_Text">
    <value xml:space="preserve">Use this page to configure Windows SharePoint Services Search Service Settings.</value>
  </data>
  <data name="SPSearchServiceInstance_Location_Text">
    <value xml:space="preserve">Default Index Location</value>
  </data>
  <data name="SPSearchServiceInstance_LocationHelp_Text">
    <value xml:space="preserve">This is the default path where the search index is located on the machine. This is a local path. Only new indexes created from here on will be in the new location.</value>
  </data>
  <data name="SPSearchServiceInstance_Location_Label">
    <value xml:space="preserve">Local path for the index file location:</value>
  </data>
  <data name="SPSearchServiceInstance_LocationExample_Label">
    <value xml:space="preserve">Example: c:\myindexes</value>
  </data>
  <data name="SPSearchServiceInstance_NoIndexFilePathErrorMessage">
    <value xml:space="preserve">No index file path</value>
  </data>
  <data name="SearchDatabaseTitle">
    <value xml:space="preserve">Search Database</value>
  </data>
  <data name="SPSearchServiceInstance_ServiceCredentials_Title">
    <value>Service Account</value>
  </data>
  <data name="SPSearchServiceInstance_ServiceCredentials_Description">
    <value xml:space="preserve">The search service will run using this account.&lt;br&gt;&lt;br&gt;The search service account must not be a built-in account in order to access the database. Examples of built-in accounts are Local Service and Network Service.</value>
  </data>
  <data name="SPSearchServiceInstance_CrawlCredentials_Title">
    <value>Content Access Account</value>
  </data>
  <data name="SPSearchServiceInstance_CrawlCredentials_Description">
    <value xml:space="preserve">The search service will access all content using this account.&lt;br&gt;&lt;br&gt;The account will be added to the Full Read policy, giving it read-only access to all content.&lt;br&gt;&lt;br&gt;For proper search functionality and information security, do not use an administrator account, and do not use accounts that can modify content.</value>
  </data>
  <data name="SPSearchServiceInstance_Schedule_Title">
    <value xml:space="preserve">Indexing Schedule</value>
  </data>
  <data name="SPSearchServiceInstance_Schedule_Description">
    <value xml:space="preserve">Configure the indexing Schedule.</value>
  </data>
  <data name="SPSearchServiceInstance_Schedule_Label">
    <value xml:space="preserve">Indexing schedule:</value>
  </data>
  <data name="multipages_cancelbutton_text">
    <value xml:space="preserve">Cancel</value>
  </data>
  <data name="cancelbutton_accesskey">
    <value xml:space="preserve">c</value>
  </data>
  <data name="ValidationSummaryHeaderText">
    <value xml:space="preserve">There were errors on the page:</value>
  </data>
</root>