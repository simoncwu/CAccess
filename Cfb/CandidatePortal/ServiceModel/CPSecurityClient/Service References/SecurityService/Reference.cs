//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cfb.CandidatePortal.ServiceModel.CPSecurityClient.SecurityService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OfflineDataException", Namespace="http://caccess.nyccfb.info/schema/data")]
    [System.SerializableAttribute()]
    public partial class OfflineDataException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<System.Data.SqlClient.SqlError> ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LineNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcedureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Class {
            get {
                return this.ClassField;
            }
            set {
                if ((this.ClassField.Equals(value) != true)) {
                    this.ClassField = value;
                    this.RaisePropertyChanged("Class");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<System.Data.SqlClient.SqlError> Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LineNumber {
            get {
                return this.LineNumberField;
            }
            set {
                if ((this.LineNumberField.Equals(value) != true)) {
                    this.LineNumberField = value;
                    this.RaisePropertyChanged("LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Procedure {
            get {
                return this.ProcedureField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureField, value) != true)) {
                    this.ProcedureField = value;
                    this.RaisePropertyChanged("Procedure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Server {
            get {
                return this.ServerField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerField, value) != true)) {
                    this.ServerField = value;
                    this.RaisePropertyChanged("Server");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecurityService.ISecurityService")]
    public interface ISecurityService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUserRights", ReplyAction="http://tempuri.org/ISecurityService/GetUserRightsResponse")]
        Cfb.CandidatePortal.Security.CPUserRights GetUserRights(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/HasUserRights", ReplyAction="http://tempuri.org/ISecurityService/HasUserRightsResponse")]
        bool HasUserRights(string userName, Cfb.CandidatePortal.Security.CPUserRights rights);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetCid", ReplyAction="http://tempuri.org/ISecurityService/GetCidResponse")]
        string GetCid(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetDisplayName", ReplyAction="http://tempuri.org/ISecurityService/GetDisplayNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPSecurityClient.SecurityService.OfflineDataException), Action="http://tempuri.org/ISecurityService/GetDisplayNameOfflineDataExceptionFault", Name="OfflineDataException", Namespace="http://caccess.nyccfb.info/schema/data")]
        string GetDisplayName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetEmail", ReplyAction="http://tempuri.org/ISecurityService/GetEmailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPSecurityClient.SecurityService.OfflineDataException), Action="http://tempuri.org/ISecurityService/GetEmailOfflineDataExceptionFault", Name="OfflineDataException", Namespace="http://caccess.nyccfb.info/schema/data")]
        string GetEmail(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetAuthorizedElectionCycles", ReplyAction="http://tempuri.org/ISecurityService/GetAuthorizedElectionCyclesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPSecurityClient.SecurityService.OfflineDataException), Action="http://tempuri.org/ISecurityService/GetAuthorizedElectionCyclesOfflineDataExcepti" +
            "onFault", Name="OfflineDataException", Namespace="http://caccess.nyccfb.info/schema/data")]
        System.Collections.Generic.List<string> GetAuthorizedElectionCycles(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetCampaignUsers", ReplyAction="http://tempuri.org/ISecurityService/GetCampaignUsersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPSecurityClient.SecurityService.OfflineDataException), Action="http://tempuri.org/ISecurityService/GetCampaignUsersOfflineDataExceptionFault", Name="OfflineDataException", Namespace="http://caccess.nyccfb.info/schema/data")]
        System.Collections.Generic.List<Cfb.CandidatePortal.Security.CPUser> GetCampaignUsers(string candidateID, string electionCycle, bool includeDisabled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUser", ReplyAction="http://tempuri.org/ISecurityService/GetUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPSecurityClient.SecurityService.OfflineDataException), Action="http://tempuri.org/ISecurityService/GetUserOfflineDataExceptionFault", Name="OfflineDataException", Namespace="http://caccess.nyccfb.info/schema/data")]
        Cfb.CandidatePortal.Security.CPUser GetUser(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/FindUsers", ReplyAction="http://tempuri.org/ISecurityService/FindUsersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPSecurityClient.SecurityService.OfflineDataException), Action="http://tempuri.org/ISecurityService/FindUsersOfflineDataExceptionFault", Name="OfflineDataException", Namespace="http://caccess.nyccfb.info/schema/data")]
        System.Collections.Generic.List<Cfb.CandidatePortal.Security.CPUser> FindUsers(string name, string email, string candidateID, string electionCycle, System.Nullable<byte> groupID, System.Nullable<bool> disabled, System.Nullable<bool> lockedOut, System.Nullable<bool> used, System.Nullable<System.DateTime> createdStartDate, System.Nullable<System.DateTime> createdEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/CreateToken", ReplyAction="http://tempuri.org/ISecurityService/CreateTokenResponse")]
        Cfb.CandidatePortal.Security.Sso.Token CreateToken(string userName, byte applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/ValidateToken", ReplyAction="http://tempuri.org/ISecurityService/ValidateTokenResponse")]
        string ValidateToken(System.Guid tokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetApplication", ReplyAction="http://tempuri.org/ISecurityService/GetApplicationResponse")]
        Cfb.CandidatePortal.Security.Sso.Application GetApplication(byte applicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetGroups", ReplyAction="http://tempuri.org/ISecurityService/GetGroupsResponse")]
        System.Collections.Generic.List<Cfb.CandidatePortal.Security.CPGroup> GetGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetGroup", ReplyAction="http://tempuri.org/ISecurityService/GetGroupResponse")]
        Cfb.CandidatePortal.Security.CPGroup GetGroup(string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetGroupMembers", ReplyAction="http://tempuri.org/ISecurityService/GetGroupMembersResponse")]
        System.Collections.Generic.List<string> GetGroupMembers(string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/CreateGroup", ReplyAction="http://tempuri.org/ISecurityService/CreateGroupResponse")]
        Cfb.CandidatePortal.Security.CPGroup CreateGroup(string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/DeleteGroup", ReplyAction="http://tempuri.org/ISecurityService/DeleteGroupResponse")]
        bool DeleteGroup(string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/UpdateGroup", ReplyAction="http://tempuri.org/ISecurityService/UpdateGroupResponse")]
        Cfb.CandidatePortal.Security.CPGroup UpdateGroup(Cfb.CandidatePortal.Security.CPGroup group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/CreateUser", ReplyAction="http://tempuri.org/ISecurityService/CreateUserResponse")]
        Cfb.CandidatePortal.Security.CPUser CreateUser(string firstName, System.Nullable<char> middleInitial, string lastName, string candidateID, string password, string email, string creator, Cfb.Cfis.CampaignContacts.EntityType type, System.Nullable<char> committeeID, string electionCycle, System.Nullable<byte> liaisonID, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/DeleteUser", ReplyAction="http://tempuri.org/ISecurityService/DeleteUserResponse")]
        bool DeleteUser(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/UpdateUser", ReplyAction="http://tempuri.org/ISecurityService/UpdateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPSecurityClient.SecurityService.OfflineDataException), Action="http://tempuri.org/ISecurityService/UpdateUserOfflineDataExceptionFault", Name="OfflineDataException", Namespace="http://caccess.nyccfb.info/schema/data")]
        Cfb.CandidatePortal.Security.UpdateResult UpdateUser(Cfb.CandidatePortal.Security.CPUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/SynchronizeUser", ReplyAction="http://tempuri.org/ISecurityService/SynchronizeUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPSecurityClient.SecurityService.OfflineDataException), Action="http://tempuri.org/ISecurityService/SynchronizeUserOfflineDataExceptionFault", Name="OfflineDataException", Namespace="http://caccess.nyccfb.info/schema/data")]
        Cfb.CandidatePortal.Security.UpdateResult SynchronizeUser(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/AddUserToGroups", ReplyAction="http://tempuri.org/ISecurityService/AddUserToGroupsResponse")]
        bool AddUserToGroups(string userName, System.Collections.Generic.List<byte> groupIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/RemoveUserFromGroups", ReplyAction="http://tempuri.org/ISecurityService/RemoveUserFromGroupsResponse")]
        bool RemoveUserFromGroups(string userName, System.Collections.Generic.List<byte> groupIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetGroupMembership", ReplyAction="http://tempuri.org/ISecurityService/GetGroupMembershipResponse")]
        System.Collections.Generic.List<Cfb.CandidatePortal.Security.CPGroup> GetGroupMembership(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/ResetPassword", ReplyAction="http://tempuri.org/ISecurityService/ResetPasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPSecurityClient.SecurityService.OfflineDataException), Action="http://tempuri.org/ISecurityService/ResetPasswordOfflineDataExceptionFault", Name="OfflineDataException", Namespace="http://caccess.nyccfb.info/schema/data")]
        bool ResetPassword(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/ChangePassword", ReplyAction="http://tempuri.org/ISecurityService/ChangePasswordResponse")]
        bool ChangePassword(string username, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GenerateUserName", ReplyAction="http://tempuri.org/ISecurityService/GenerateUserNameResponse")]
        string GenerateUserName(string firstName, System.Nullable<char> middleInitial, string lastName, string candidateID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISecurityServiceChannel : Cfb.CandidatePortal.ServiceModel.CPSecurityClient.SecurityService.ISecurityService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityServiceClient : System.ServiceModel.ClientBase<Cfb.CandidatePortal.ServiceModel.CPSecurityClient.SecurityService.ISecurityService>, Cfb.CandidatePortal.ServiceModel.CPSecurityClient.SecurityService.ISecurityService {
        
        public SecurityServiceClient() {
        }
        
        public SecurityServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SecurityServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SecurityServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SecurityServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Cfb.CandidatePortal.Security.CPUserRights GetUserRights(string userName) {
            return base.Channel.GetUserRights(userName);
        }
        
        public bool HasUserRights(string userName, Cfb.CandidatePortal.Security.CPUserRights rights) {
            return base.Channel.HasUserRights(userName, rights);
        }
        
        public string GetCid(string userName) {
            return base.Channel.GetCid(userName);
        }
        
        public string GetDisplayName(string userName) {
            return base.Channel.GetDisplayName(userName);
        }
        
        public string GetEmail(string userName) {
            return base.Channel.GetEmail(userName);
        }
        
        public System.Collections.Generic.List<string> GetAuthorizedElectionCycles(string userName) {
            return base.Channel.GetAuthorizedElectionCycles(userName);
        }
        
        public System.Collections.Generic.List<Cfb.CandidatePortal.Security.CPUser> GetCampaignUsers(string candidateID, string electionCycle, bool includeDisabled) {
            return base.Channel.GetCampaignUsers(candidateID, electionCycle, includeDisabled);
        }
        
        public Cfb.CandidatePortal.Security.CPUser GetUser(string userName) {
            return base.Channel.GetUser(userName);
        }
        
        public System.Collections.Generic.List<Cfb.CandidatePortal.Security.CPUser> FindUsers(string name, string email, string candidateID, string electionCycle, System.Nullable<byte> groupID, System.Nullable<bool> disabled, System.Nullable<bool> lockedOut, System.Nullable<bool> used, System.Nullable<System.DateTime> createdStartDate, System.Nullable<System.DateTime> createdEndDate) {
            return base.Channel.FindUsers(name, email, candidateID, electionCycle, groupID, disabled, lockedOut, used, createdStartDate, createdEndDate);
        }
        
        public Cfb.CandidatePortal.Security.Sso.Token CreateToken(string userName, byte applicationID) {
            return base.Channel.CreateToken(userName, applicationID);
        }
        
        public string ValidateToken(System.Guid tokenID) {
            return base.Channel.ValidateToken(tokenID);
        }
        
        public Cfb.CandidatePortal.Security.Sso.Application GetApplication(byte applicationID) {
            return base.Channel.GetApplication(applicationID);
        }
        
        public System.Collections.Generic.List<Cfb.CandidatePortal.Security.CPGroup> GetGroups() {
            return base.Channel.GetGroups();
        }
        
        public Cfb.CandidatePortal.Security.CPGroup GetGroup(string groupName) {
            return base.Channel.GetGroup(groupName);
        }
        
        public System.Collections.Generic.List<string> GetGroupMembers(string groupName) {
            return base.Channel.GetGroupMembers(groupName);
        }
        
        public Cfb.CandidatePortal.Security.CPGroup CreateGroup(string groupName) {
            return base.Channel.CreateGroup(groupName);
        }
        
        public bool DeleteGroup(string groupName) {
            return base.Channel.DeleteGroup(groupName);
        }
        
        public Cfb.CandidatePortal.Security.CPGroup UpdateGroup(Cfb.CandidatePortal.Security.CPGroup group) {
            return base.Channel.UpdateGroup(group);
        }
        
        public Cfb.CandidatePortal.Security.CPUser CreateUser(string firstName, System.Nullable<char> middleInitial, string lastName, string candidateID, string password, string email, string creator, Cfb.Cfis.CampaignContacts.EntityType type, System.Nullable<char> committeeID, string electionCycle, System.Nullable<byte> liaisonID, string username) {
            return base.Channel.CreateUser(firstName, middleInitial, lastName, candidateID, password, email, creator, type, committeeID, electionCycle, liaisonID, username);
        }
        
        public bool DeleteUser(string userName) {
            return base.Channel.DeleteUser(userName);
        }
        
        public Cfb.CandidatePortal.Security.UpdateResult UpdateUser(Cfb.CandidatePortal.Security.CPUser user) {
            return base.Channel.UpdateUser(user);
        }
        
        public Cfb.CandidatePortal.Security.UpdateResult SynchronizeUser(string userName) {
            return base.Channel.SynchronizeUser(userName);
        }
        
        public bool AddUserToGroups(string userName, System.Collections.Generic.List<byte> groupIDs) {
            return base.Channel.AddUserToGroups(userName, groupIDs);
        }
        
        public bool RemoveUserFromGroups(string userName, System.Collections.Generic.List<byte> groupIDs) {
            return base.Channel.RemoveUserFromGroups(userName, groupIDs);
        }
        
        public System.Collections.Generic.List<Cfb.CandidatePortal.Security.CPGroup> GetGroupMembership(string userName) {
            return base.Channel.GetGroupMembership(userName);
        }
        
        public bool ResetPassword(string username) {
            return base.Channel.ResetPassword(username);
        }
        
        public bool ChangePassword(string username, string oldPassword, string newPassword) {
            return base.Channel.ChangePassword(username, oldPassword, newPassword);
        }
        
        public string GenerateUserName(string firstName, System.Nullable<char> middleInitial, string lastName, string candidateID) {
            return base.Channel.GenerateUserName(firstName, middleInitial, lastName, candidateID);
        }
    }
}
