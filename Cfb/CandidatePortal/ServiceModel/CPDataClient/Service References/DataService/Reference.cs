//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OfflineDataException", Namespace="http://caccess.nyccfb.info/schema/data")]
    [System.SerializableAttribute()]
    internal partial class OfflineDataException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<System.Data.SqlClient.SqlError> ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LineNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcedureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal byte Class {
            get {
                return this.ClassField;
            }
            set {
                if ((this.ClassField.Equals(value) != true)) {
                    this.ClassField = value;
                    this.RaisePropertyChanged("Class");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Collections.Generic.List<System.Data.SqlClient.SqlError> Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int LineNumber {
            get {
                return this.LineNumberField;
            }
            set {
                if ((this.LineNumberField.Equals(value) != true)) {
                    this.LineNumberField = value;
                    this.RaisePropertyChanged("LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Procedure {
            get {
                return this.ProcedureField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureField, value) != true)) {
                    this.ProcedureField = value;
                    this.RaisePropertyChanged("Procedure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Server {
            get {
                return this.ServerField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerField, value) != true)) {
                    this.ServerField = value;
                    this.RaisePropertyChanged("Server");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CVResponseDeadlines", Namespace="http://caccess.nyccfb.info/schema/data", ItemName="CVResponseDeadline")]
    [System.SerializableAttribute()]
    internal class CVResponseDeadlines : System.Collections.Generic.List<Cfb.CandidatePortal.CVResponseDeadline> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CPCalendarItemCollectionComplianceVisit", Namespace="http://caccess.nyccfb.info/schema/data", ItemName="ComplianceVisit")]
    [System.SerializableAttribute()]
    internal class CPCalendarItemCollectionComplianceVisit : System.Collections.Generic.List<Cfb.CandidatePortal.ComplianceVisit> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="DbrResponseDeadlines", Namespace="http://caccess.nyccfb.info/schema/data", ItemName="DbrResponseDeadline")]
    [System.SerializableAttribute()]
    internal class DbrResponseDeadlines : System.Collections.Generic.List<Cfb.CandidatePortal.DbrResponseDeadline> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CPCalendarItemCollectionDoingBusinessReview", Namespace="http://caccess.nyccfb.info/schema/data", ItemName="DoingBusinessReview")]
    [System.SerializableAttribute()]
    internal class CPCalendarItemCollectionDoingBusinessReview : System.Collections.Generic.List<Cfb.CandidatePortal.DoingBusinessReview> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CPCalendarItemCollectionFilingDeadline", Namespace="http://caccess.nyccfb.info/schema/data", ItemName="FilingDeadline")]
    [System.SerializableAttribute()]
    internal class CPCalendarItemCollectionFilingDeadline : System.Collections.Generic.List<Cfb.CandidatePortal.FilingDeadline> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SRResponseDeadlines", Namespace="http://caccess.nyccfb.info/schema/data", ItemName="SRResponseDeadline")]
    [System.SerializableAttribute()]
    internal class SRResponseDeadlines : System.Collections.Generic.List<Cfb.CandidatePortal.SRResponseDeadline> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CPCalendarItemCollectionStatementReview", Namespace="http://caccess.nyccfb.info/schema/data", ItemName="StatementReview")]
    [System.SerializableAttribute()]
    internal class CPCalendarItemCollectionStatementReview : System.Collections.Generic.List<Cfb.CandidatePortal.StatementReview> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://caccess.nyccfb.info/schema/data", ConfigurationName="DataService.IDataService")]
    internal interface IDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetActiveCandidate", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetActiveCandidateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetActiveCandidateOfflineData" +
            "ExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.ActiveCandidate GetActiveCandidate(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetActiveCandidates", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetActiveCandidatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetActiveCandidatesOfflineDat" +
            "aExceptionFault", Name="OfflineDataException")]
        System.Collections.Generic.Dictionary<string, Cfb.CandidatePortal.ActiveCandidate> GetActiveCandidates(string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetActiveElectionCycles", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetActiveElectionCyclesRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetActiveElectionCyclesOfflin" +
            "eDataExceptionFault", Name="OfflineDataException")]
        System.Collections.Generic.List<string> GetActiveElectionCycles(string candidateID, string cutoff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetAuthorizedCommittees", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetAuthorizedCommitteesRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetAuthorizedCommitteesOfflin" +
            "eDataExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.AuthorizedCommittees GetAuthorizedCommittees(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetPrimaryCommitteeID", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetPrimaryCommitteeIDResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetPrimaryCommitteeIDOfflineD" +
            "ataExceptionFault", Name="OfflineDataException")]
        System.Nullable<char> GetPrimaryCommitteeID(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCommittees", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCommitteesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCommitteesOfflineDataExcep" +
            "tionFault", Name="OfflineDataException")]
        System.Collections.Generic.List<Cfb.CandidatePortal.Committee> GetCommittees(string candidateID, System.Nullable<char> committeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetBankAccounts", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetBankAccountsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetBankAccountsOfflineDataExc" +
            "eptionFault", Name="OfflineDataException")]
        System.Collections.Generic.Dictionary<byte, Cfb.CandidatePortal.BankAccount> GetBankAccounts(string candidateID, string electionCycle, char committeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCandidate", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCandidateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCandidateOfflineDataExcept" +
            "ionFault", Name="OfflineDataException")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Cfb.CandidatePortal.ActiveCandidate))]
        Cfb.Cfis.CampaignContacts.Candidate GetCandidate(string candidateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCandidates", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCandidatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCandidatesOfflineDataExcep" +
            "tionFault", Name="OfflineDataException")]
        System.Collections.Generic.Dictionary<string, Cfb.Cfis.CampaignContacts.Candidate> GetCandidates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCandidateName", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCandidateNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCandidateNameOfflineDataEx" +
            "ceptionFault", Name="OfflineDataException")]
        string GetCandidateName(string candidateID, bool formal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCertificationDocuments", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCertificationDocumentsResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCertificationDocumentsOffl" +
            "ineDataExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.SubmissionDocuments.CertificationHistory GetCertificationDocuments(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCsuLiaisons", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCsuLiaisonsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCsuLiaisonsOfflineDataExce" +
            "ptionFault", Name="OfflineDataException")]
        System.Collections.Generic.Dictionary<byte, Cfb.CandidatePortal.CsuLiaison> GetCsuLiaisons(string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetTrainingStatus", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetTrainingStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetTrainingStatusOfflineDataE" +
            "xceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.TrainingTracking.TrainingStatus GetTrainingStatus(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetTollingLetterByCodes", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetTollingLetterByCodesRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetTollingLetterByCodesOfflin" +
            "eDataExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.PostElection.TollingLetter GetTollingLetterByCodes(string sourceCode, string eventCode, string typeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetTollingLetterByID", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetTollingLetterByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetTollingLetterByIDOfflineDa" +
            "taExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.PostElection.TollingLetter GetTollingLetterByID(int letterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetTollingLetters", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetTollingLettersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetTollingLettersOfflineDataE" +
            "xceptionFault", Name="OfflineDataException")]
        System.Collections.Generic.List<Cfb.CandidatePortal.PostElection.TollingLetter> GetTollingLetters();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCoibReceipts", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCoibReceiptsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCoibReceiptsOfflineDataExc" +
            "eptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.SubmissionDocuments.CoibReceiptHistory GetCoibReceipts(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetComplianceVisits", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetComplianceVisitsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetComplianceVisitsOfflineDat" +
            "aExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.ComplianceVisits GetComplianceVisits(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetInitialDocumentationReques" +
            "t", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetInitialDocumentationReques" +
            "tResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetInitialDocumentationReques" +
            "tOfflineDataExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.PostElection.InitialDocumentationRequest GetInitialDocumentationRequest(string candidateID, string electionCycle, bool published);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetIdrInadequateEvent", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetIdrInadequateEventResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetIdrInadequateEventOfflineD" +
            "ataExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.PostElection.IdrInadequateEvent GetIdrInadequateEvent(string candidateID, string electionCycle, bool published);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/HasIdrResponseAnalysis", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/HasIdrResponseAnalysisRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/HasIdrResponseAnalysisOffline" +
            "DataExceptionFault", Name="OfflineDataException")]
        bool HasIdrResponseAnalysis(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetDraftAuditReport", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetDraftAuditReportResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetDraftAuditReportOfflineDat" +
            "aExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.PostElection.DraftAuditReport GetDraftAuditReport(string candidateID, string electionCycle, bool published);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetDarInadequateEvent", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetDarInadequateEventResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetDarInadequateEventOfflineD" +
            "ataExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.PostElection.DarInadequateEvent GetDarInadequateEvent(string candidateID, string electionCycle, bool published);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetFinalAuditReport", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetFinalAuditReportResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetFinalAuditReportOfflineDat" +
            "aExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.PostElection.FinalAuditReport GetFinalAuditReport(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/CountTollingDaysIncurred", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/CountTollingDaysIncurredRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/CountTollingDaysIncurredOffli" +
            "neDataExceptionFault", Name="OfflineDataException")]
        int CountTollingDaysIncurred(string candidateID, string electionCycle, bool isFar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetTollingEvents", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetTollingEventsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetTollingEventsOfflineDataEx" +
            "ceptionFault", Name="OfflineDataException")]
        System.Collections.Generic.List<Cfb.CandidatePortal.PostElection.TollingEvent> GetTollingEvents(string candidateID, string electionCycle, bool far);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetIdrInadequateEvents", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetIdrInadequateEventsRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetIdrInadequateEventsOffline" +
            "DataExceptionFault", Name="OfflineDataException")]
        System.Collections.Generic.List<Cfb.CandidatePortal.PostElection.IdrInadequateEvent> GetIdrInadequateEvents(string candidateID, string electionCycle, Cfb.CandidatePortal.PostElection.InadequateEventRetrieval retrievalType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetDarInadequateEvents", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetDarInadequateEventsRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetDarInadequateEventsOffline" +
            "DataExceptionFault", Name="OfflineDataException")]
        System.Collections.Generic.List<Cfb.CandidatePortal.PostElection.DarInadequateEvent> GetDarInadequateEvents(string candidateID, string electionCycle, Cfb.CandidatePortal.PostElection.InadequateEventRetrieval retrievalType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetSuspension", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetSuspensionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetSuspensionOfflineDataExcep" +
            "tionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.PostElection.Suspension GetSuspension(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetTollingStartDate", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetTollingStartDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetTollingStartDateOfflineDat" +
            "aExceptionFault", Name="OfflineDataException")]
        System.Nullable<System.DateTime> GetTollingStartDate(string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetPublicFundsHistory", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetPublicFundsHistoryResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetPublicFundsHistoryOfflineD" +
            "ataExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.PublicFundsHistory GetPublicFundsHistory(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetGlobalSetting", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetGlobalSettingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetGlobalSettingOfflineDataEx" +
            "ceptionFault", Name="OfflineDataException")]
        string GetGlobalSetting(string settingName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/SetGlobalSetting", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/SetGlobalSettingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/SetGlobalSettingOfflineDataEx" +
            "ceptionFault", Name="OfflineDataException")]
        void SetGlobalSetting(string settingName, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCsmartIdsRequests", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCsmartIdsRequestsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCsmartIdsRequestsOfflineDa" +
            "taExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.SubmissionDocuments.CsmartIdsRequestHistory GetCsmartIdsRequests(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetDisclosureStatements", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetDisclosureStatementsRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetDisclosureStatementsOfflin" +
            "eDataExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.SubmissionDocuments.DisclosureStatementHistories GetDisclosureStatements(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetDoingBusinessReviews", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetDoingBusinessReviewsRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetDoingBusinessReviewsOfflin" +
            "eDataExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.DoingBusinessReviews GetDoingBusinessReviews(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetElections", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetElectionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetElectionsOfflineDataExcept" +
            "ionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.Elections GetElections(string cutoff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetActiveElections", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetActiveElectionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetActiveElectionsOfflineData" +
            "ExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.Elections GetActiveElections(string cutoff, string candidateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetExtensionRequest", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetExtensionRequestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetExtensionRequestOfflineDat" +
            "aExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.ExtensionRequest GetExtensionRequest(string candidateID, string electionCycle, Cfb.CandidatePortal.ExtensionType type, byte reviewNumber, byte iteration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/AddExtensionRequest", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/AddExtensionRequestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/AddExtensionRequestOfflineDat" +
            "aExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.ExtensionRequest AddExtensionRequest(string candidateID, string electionCycle, Cfb.CandidatePortal.ExtensionType type, byte reviewNumber, System.DateTime date, System.DateTime requestedDueDate, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetFilerRegistrations", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetFilerRegistrationsResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetFilerRegistrationsOfflineD" +
            "ataExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.SubmissionDocuments.FilerRegistrationHistory GetFilerRegistrations(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetFilingDeadlines", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetFilingDeadlinesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetFilingDeadlinesOfflineData" +
            "ExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.FilingDeadlines GetFilingDeadlines(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetFinancialSummary", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetFinancialSummaryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetFinancialSummaryOfflineDat" +
            "aExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.FinancialSummary GetFinancialSummary(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetLiaisons", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetLiaisonsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetLiaisonsOfflineDataExcepti" +
            "onFault", Name="OfflineDataException")]
        System.Collections.Generic.Dictionary<byte, Cfb.Cfis.CampaignContacts.Liaison> GetLiaisons(string candidateID, char committeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetPaymentPlan", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetPaymentPlanResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetPaymentPlanOfflineDataExce" +
            "ptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.PaymentPlan GetPaymentPlan(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetPreElectionDisclosures", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetPreElectionDisclosuresResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetPreElectionDisclosuresOffl" +
            "ineDataExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.SubmissionDocuments.PreElectionDisclosureHistory GetPreElectionDisclosures(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetStatementsOfNeed", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetStatementsOfNeedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetStatementsOfNeedOfflineDat" +
            "aExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.SubmissionDocuments.StatementOfNeedHistory GetStatementsOfNeed(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetPrincipalStatementReviews", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetPrincipalStatementReviewsR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetPrincipalStatementReviewsO" +
            "fflineDataExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.StatementReviews GetPrincipalStatementReviews(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetStatementReviews", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetStatementReviewsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetStatementReviewsOfflineDat" +
            "aExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.StatementReviews GetStatementReviews(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetStatements", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetStatementsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetStatementsOfflineDataExcep" +
            "tionFault", Name="OfflineDataException")]
        System.Collections.Generic.Dictionary<byte, Cfb.CandidatePortal.Statement> GetStatements(string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetTerminationVerifications", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetTerminationVerificationsRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetTerminationVerificationsOf" +
            "flineDataExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.SubmissionDocuments.TerminationHistory GetTerminationVerifications(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetThresholdHistory", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetThresholdHistoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetThresholdHistoryOfflineDat" +
            "aExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.ThresholdHistory GetThresholdHistory(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetWebTransferDate", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetWebTransferDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetWebTransferDateOfflineData" +
            "ExceptionFault", Name="OfflineDataException")]
        System.Nullable<System.DateTime> GetWebTransferDate(string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/AddCmoAttachmentStream", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/AddCmoAttachmentStreamRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/AddCmoAttachmentStreamOffline" +
            "DataExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.Cmo.CmoAttachment AddCmoAttachmentStream(Cfb.CandidatePortal.Cmo.CmoAttachmentStream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/AddCmoAttachment", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/AddCmoAttachmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/AddCmoAttachmentOfflineDataEx" +
            "ceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.Cmo.CmoAttachment AddCmoAttachment(string candidateID, int messageID, byte[] data, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/DeleteCmoAttachment", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/DeleteCmoAttachmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/DeleteCmoAttachmentOfflineDat" +
            "aExceptionFault", Name="OfflineDataException")]
        bool DeleteCmoAttachment(Cfb.CandidatePortal.Cmo.CmoAttachment attachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoAttachment", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoAttachmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoAttachmentOfflineDataEx" +
            "ceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.Cmo.CmoAttachment GetCmoAttachment(string uniqueID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoAttachmentByIDs", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoAttachmentByIDsResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoAttachmentByIDsOfflineD" +
            "ataExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.Cmo.CmoAttachment GetCmoAttachmentByIDs(string candidateID, int messageID, byte id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoAttachmentPath", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoAttachmentPathResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoAttachmentPathOfflineDa" +
            "taExceptionFault", Name="OfflineDataException")]
        string GetCmoAttachmentPath(string candidateID, int messageID, byte id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/UpdateCmoAttachment", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/UpdateCmoAttachmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/UpdateCmoAttachmentOfflineDat" +
            "aExceptionFault", Name="OfflineDataException")]
        bool UpdateCmoAttachment(Cfb.CandidatePortal.Cmo.CmoAttachment attachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/DeleteCmoCategory", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/DeleteCmoCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/DeleteCmoCategoryOfflineDataE" +
            "xceptionFault", Name="OfflineDataException")]
        bool DeleteCmoCategory(Cfb.CandidatePortal.Cmo.CmoCategory category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoCategories", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoCategoriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoCategoriesOfflineDataEx" +
            "ceptionFault", Name="OfflineDataException")]
        System.Collections.Generic.Dictionary<byte, Cfb.CandidatePortal.Cmo.CmoCategory> GetCmoCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoCategory", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoCategoryOfflineDataExce" +
            "ptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.Cmo.CmoCategory GetCmoCategory(byte id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/UpdateCmoCategory", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/UpdateCmoCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/UpdateCmoCategoryOfflineDataE" +
            "xceptionFault", Name="OfflineDataException")]
        bool UpdateCmoCategory(Cfb.CandidatePortal.Cmo.CmoCategory category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetMailboxMessages", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetMailboxMessagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetMailboxMessagesOfflineData" +
            "ExceptionFault", Name="OfflineDataException")]
        System.Collections.Generic.List<Cfb.CandidatePortal.Cmo.CmoMessage> GetMailboxMessages(string candidateID, Cfb.CandidatePortal.Cmo.CmoMailboxView view, System.Collections.Generic.List<string> elections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/CountUnopenedMailboxMessages", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/CountUnopenedMailboxMessagesR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/CountUnopenedMailboxMessagesO" +
            "fflineDataExceptionFault", Name="OfflineDataException")]
        uint CountUnopenedMailboxMessages(string candidateID, System.Collections.Generic.List<string> elections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/AddCmoMessage", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/AddCmoMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/AddCmoMessageOfflineDataExcep" +
            "tionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.Cmo.CmoMessage AddCmoMessage(string candidateID, string electionCycle, string title, string body, string creator, string openReceiptEmail, byte categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/DeleteCmoMessage", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/DeleteCmoMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/DeleteCmoMessageOfflineDataEx" +
            "ceptionFault", Name="OfflineDataException")]
        bool DeleteCmoMessage(string candidateID, int messageID, byte[] version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/FindCmoMessages", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/FindCmoMessagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/FindCmoMessagesOfflineDataExc" +
            "eptionFault", Name="OfflineDataException")]
        System.Collections.Generic.List<Cfb.CandidatePortal.Cmo.CmoMessage> FindCmoMessages(string candidateID, string electionCycle, string creator, System.Nullable<byte> category, string title, string body, System.Nullable<System.DateTime> postedStart, System.Nullable<System.DateTime> postedEnd, System.Nullable<bool> opened, System.Nullable<bool> hasAttachments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoMessageCreators", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoMessageCreatorsResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoMessageCreatorsOfflineD" +
            "ataExceptionFault", Name="OfflineDataException")]
        System.Collections.Generic.Dictionary<string, string> GetCmoMessageCreators();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoMessageByCandidateMessa" +
            "ge", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoMessageByCandidateMessa" +
            "geResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoMessageByCandidateMessa" +
            "geOfflineDataExceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.Cmo.CmoMessage GetCmoMessageByCandidateMessage(string candidateID, int messageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoMessageByID", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoMessageByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoMessageByIDOfflineDataE" +
            "xceptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.Cmo.CmoMessage GetCmoMessageByID(string uniqueID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoMessages", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoMessagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoMessagesOfflineDataExce" +
            "ptionFault", Name="OfflineDataException")]
        System.Collections.Generic.List<Cfb.CandidatePortal.Cmo.CmoMessage> GetCmoMessages(System.Collections.Generic.List<string> uniqueIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoPostedMessagesByCandida" +
            "teElection", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoPostedMessagesByCandida" +
            "teElectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoPostedMessagesByCandida" +
            "teElectionOfflineDataExceptionFault", Name="OfflineDataException")]
        System.Collections.Generic.List<Cfb.CandidatePortal.Cmo.CmoMessage> GetCmoPostedMessagesByCandidateElection(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoPostedMessages", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoPostedMessagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoPostedMessagesOfflineDa" +
            "taExceptionFault", Name="OfflineDataException")]
        System.Collections.Generic.List<Cfb.CandidatePortal.Cmo.CmoMessage> GetCmoPostedMessages(bool showAllData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/OpenCmoMessage", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/OpenCmoMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/OpenCmoMessageOfflineDataExce" +
            "ptionFault", Name="OfflineDataException")]
        bool OpenCmoMessage(string candidateID, int messageID, string username, byte[] version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/PostCmoMessage", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/PostCmoMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/PostCmoMessageOfflineDataExce" +
            "ptionFault", Name="OfflineDataException")]
        bool PostCmoMessage(string candidateID, int messageID, byte[] version, bool notify);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/SetCmoMessageArchiveStatus", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/SetCmoMessageArchiveStatusRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/SetCmoMessageArchiveStatusOff" +
            "lineDataExceptionFault", Name="OfflineDataException")]
        bool SetCmoMessageArchiveStatus(string candidateID, int messageID, bool archived, string username, byte[] version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/SetCmoMessageFlagStatus", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/SetCmoMessageFlagStatusRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/SetCmoMessageFlagStatusOfflin" +
            "eDataExceptionFault", Name="OfflineDataException")]
        bool SetCmoMessageFlagStatus(string candidateID, int messageID, bool flagged, string username, byte[] version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/UpdateCmoMessage", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/UpdateCmoMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/UpdateCmoMessageOfflineDataEx" +
            "ceptionFault", Name="OfflineDataException")]
        bool UpdateCmoMessage(Cfb.CandidatePortal.Cmo.CmoMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/AddCmoSettings", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/AddCmoSettingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/AddCmoSettingsOfflineDataExce" +
            "ptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.Cmo.CmoSettings AddCmoSettings(string candidateId, bool isPaperless, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoSettings", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoSettingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetCmoSettingsOfflineDataExce" +
            "ptionFault", Name="OfflineDataException")]
        Cfb.CandidatePortal.Cmo.CmoSettings GetCmoSettings(string candidateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/UpdateCmoSettings", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/UpdateCmoSettingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/UpdateCmoSettingsOfflineDataE" +
            "xceptionFault", Name="OfflineDataException")]
        bool UpdateCmoSettings(Cfb.CandidatePortal.Cmo.CmoSettings settings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetStatementReviewMessageIDs", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetStatementReviewMessageIDsR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetStatementReviewMessageIDsO" +
            "fflineDataExceptionFault", Name="OfflineDataException")]
        System.Collections.Generic.Dictionary<byte, string> GetStatementReviewMessageIDs(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetComplianceVisitMessageIDs", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetComplianceVisitMessageIDsR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetComplianceVisitMessageIDsO" +
            "fflineDataExceptionFault", Name="OfflineDataException")]
        System.Collections.Generic.Dictionary<byte, string> GetComplianceVisitMessageIDs(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetDoingBusinessReviewMessage" +
            "IDs", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetDoingBusinessReviewMessage" +
            "IDsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetDoingBusinessReviewMessage" +
            "IDsOfflineDataExceptionFault", Name="OfflineDataException")]
        System.Collections.Generic.Dictionary<byte, string> GetDoingBusinessReviewMessageIDs(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetAuditReportMessageIDs", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetAuditReportMessageIDsRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetAuditReportMessageIDsOffli" +
            "neDataExceptionFault", Name="OfflineDataException")]
        System.Collections.Generic.Dictionary<Cfb.CandidatePortal.PostElection.AuditReportType, string> GetAuditReportMessageIDs(string candidateID, string electionCycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetPaymentMessageID", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetPaymentMessageIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetPaymentMessageIDOfflineDat" +
            "aExceptionFault", Name="OfflineDataException")]
        string GetPaymentMessageID(string candidateID, byte paymentRun);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/SetCmoMessageTolling", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/SetCmoMessageTollingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/SetCmoMessageTollingOfflineDa" +
            "taExceptionFault", Name="OfflineDataException")]
        bool SetCmoMessageTolling(string candidateID, int messageID, int eventNumber, Cfb.CandidatePortal.PostElection.TollingLetter letter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetTollingMessageIDs", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetTollingMessageIDsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetTollingMessageIDsOfflineDa" +
            "taExceptionFault", Name="OfflineDataException")]
        System.Collections.Generic.Dictionary<int, string> GetTollingMessageIDs(string candidateID, string electionCycle, bool far);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/PingCfis", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/PingCfisResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/PingCfisOfflineDataExceptionF" +
            "ault", Name="OfflineDataException")]
        void PingCfis();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://caccess.nyccfb.info/schema/data/IDataService/GetEntity", ReplyAction="http://caccess.nyccfb.info/schema/data/IDataService/GetEntityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.OfflineDataException), Action="http://caccess.nyccfb.info/schema/data/IDataService/GetEntityOfflineDataException" +
            "Fault", Name="OfflineDataException")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Cfb.Cfis.CampaignContacts.Liaison))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Cfb.CandidatePortal.Committee))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Cfb.CandidatePortal.AuthorizedCommittee))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Cfb.CandidatePortal.TrainingTracking.Trainee))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Cfb.Cfis.CampaignContacts.Candidate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Cfb.CandidatePortal.ActiveCandidate))]
        Cfb.Cfis.CampaignContacts.Entity GetEntity(string candidateID, System.Nullable<char> committeeID, string electionCycle, System.Nullable<byte> liaisonID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface IDataServiceChannel : Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.IDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class DataServiceClient : System.ServiceModel.ClientBase<Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.IDataService>, Cfb.CandidatePortal.ServiceModel.CPDataClient.DataService.IDataService {
        
        public DataServiceClient() {
        }
        
        public DataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Cfb.CandidatePortal.ActiveCandidate GetActiveCandidate(string candidateID, string electionCycle) {
            return base.Channel.GetActiveCandidate(candidateID, electionCycle);
        }
        
        public System.Collections.Generic.Dictionary<string, Cfb.CandidatePortal.ActiveCandidate> GetActiveCandidates(string electionCycle) {
            return base.Channel.GetActiveCandidates(electionCycle);
        }
        
        public System.Collections.Generic.List<string> GetActiveElectionCycles(string candidateID, string cutoff) {
            return base.Channel.GetActiveElectionCycles(candidateID, cutoff);
        }
        
        public Cfb.CandidatePortal.AuthorizedCommittees GetAuthorizedCommittees(string candidateID, string electionCycle) {
            return base.Channel.GetAuthorizedCommittees(candidateID, electionCycle);
        }
        
        public System.Nullable<char> GetPrimaryCommitteeID(string candidateID, string electionCycle) {
            return base.Channel.GetPrimaryCommitteeID(candidateID, electionCycle);
        }
        
        public System.Collections.Generic.List<Cfb.CandidatePortal.Committee> GetCommittees(string candidateID, System.Nullable<char> committeeID) {
            return base.Channel.GetCommittees(candidateID, committeeID);
        }
        
        public System.Collections.Generic.Dictionary<byte, Cfb.CandidatePortal.BankAccount> GetBankAccounts(string candidateID, string electionCycle, char committeeID) {
            return base.Channel.GetBankAccounts(candidateID, electionCycle, committeeID);
        }
        
        public Cfb.Cfis.CampaignContacts.Candidate GetCandidate(string candidateID) {
            return base.Channel.GetCandidate(candidateID);
        }
        
        public System.Collections.Generic.Dictionary<string, Cfb.Cfis.CampaignContacts.Candidate> GetCandidates() {
            return base.Channel.GetCandidates();
        }
        
        public string GetCandidateName(string candidateID, bool formal) {
            return base.Channel.GetCandidateName(candidateID, formal);
        }
        
        public Cfb.CandidatePortal.SubmissionDocuments.CertificationHistory GetCertificationDocuments(string candidateID, string electionCycle) {
            return base.Channel.GetCertificationDocuments(candidateID, electionCycle);
        }
        
        public System.Collections.Generic.Dictionary<byte, Cfb.CandidatePortal.CsuLiaison> GetCsuLiaisons(string electionCycle) {
            return base.Channel.GetCsuLiaisons(electionCycle);
        }
        
        public Cfb.CandidatePortal.TrainingTracking.TrainingStatus GetTrainingStatus(string candidateID, string electionCycle) {
            return base.Channel.GetTrainingStatus(candidateID, electionCycle);
        }
        
        public Cfb.CandidatePortal.PostElection.TollingLetter GetTollingLetterByCodes(string sourceCode, string eventCode, string typeCode) {
            return base.Channel.GetTollingLetterByCodes(sourceCode, eventCode, typeCode);
        }
        
        public Cfb.CandidatePortal.PostElection.TollingLetter GetTollingLetterByID(int letterID) {
            return base.Channel.GetTollingLetterByID(letterID);
        }
        
        public System.Collections.Generic.List<Cfb.CandidatePortal.PostElection.TollingLetter> GetTollingLetters() {
            return base.Channel.GetTollingLetters();
        }
        
        public Cfb.CandidatePortal.SubmissionDocuments.CoibReceiptHistory GetCoibReceipts(string candidateID, string electionCycle) {
            return base.Channel.GetCoibReceipts(candidateID, electionCycle);
        }
        
        public Cfb.CandidatePortal.ComplianceVisits GetComplianceVisits(string candidateID, string electionCycle) {
            return base.Channel.GetComplianceVisits(candidateID, electionCycle);
        }
        
        public Cfb.CandidatePortal.PostElection.InitialDocumentationRequest GetInitialDocumentationRequest(string candidateID, string electionCycle, bool published) {
            return base.Channel.GetInitialDocumentationRequest(candidateID, electionCycle, published);
        }
        
        public Cfb.CandidatePortal.PostElection.IdrInadequateEvent GetIdrInadequateEvent(string candidateID, string electionCycle, bool published) {
            return base.Channel.GetIdrInadequateEvent(candidateID, electionCycle, published);
        }
        
        public bool HasIdrResponseAnalysis(string candidateID, string electionCycle) {
            return base.Channel.HasIdrResponseAnalysis(candidateID, electionCycle);
        }
        
        public Cfb.CandidatePortal.PostElection.DraftAuditReport GetDraftAuditReport(string candidateID, string electionCycle, bool published) {
            return base.Channel.GetDraftAuditReport(candidateID, electionCycle, published);
        }
        
        public Cfb.CandidatePortal.PostElection.DarInadequateEvent GetDarInadequateEvent(string candidateID, string electionCycle, bool published) {
            return base.Channel.GetDarInadequateEvent(candidateID, electionCycle, published);
        }
        
        public Cfb.CandidatePortal.PostElection.FinalAuditReport GetFinalAuditReport(string candidateID, string electionCycle) {
            return base.Channel.GetFinalAuditReport(candidateID, electionCycle);
        }
        
        public int CountTollingDaysIncurred(string candidateID, string electionCycle, bool isFar) {
            return base.Channel.CountTollingDaysIncurred(candidateID, electionCycle, isFar);
        }
        
        public System.Collections.Generic.List<Cfb.CandidatePortal.PostElection.TollingEvent> GetTollingEvents(string candidateID, string electionCycle, bool far) {
            return base.Channel.GetTollingEvents(candidateID, electionCycle, far);
        }
        
        public System.Collections.Generic.List<Cfb.CandidatePortal.PostElection.IdrInadequateEvent> GetIdrInadequateEvents(string candidateID, string electionCycle, Cfb.CandidatePortal.PostElection.InadequateEventRetrieval retrievalType) {
            return base.Channel.GetIdrInadequateEvents(candidateID, electionCycle, retrievalType);
        }
        
        public System.Collections.Generic.List<Cfb.CandidatePortal.PostElection.DarInadequateEvent> GetDarInadequateEvents(string candidateID, string electionCycle, Cfb.CandidatePortal.PostElection.InadequateEventRetrieval retrievalType) {
            return base.Channel.GetDarInadequateEvents(candidateID, electionCycle, retrievalType);
        }
        
        public Cfb.CandidatePortal.PostElection.Suspension GetSuspension(string candidateID, string electionCycle) {
            return base.Channel.GetSuspension(candidateID, electionCycle);
        }
        
        public System.Nullable<System.DateTime> GetTollingStartDate(string electionCycle) {
            return base.Channel.GetTollingStartDate(electionCycle);
        }
        
        public Cfb.CandidatePortal.PublicFundsHistory GetPublicFundsHistory(string candidateID, string electionCycle) {
            return base.Channel.GetPublicFundsHistory(candidateID, electionCycle);
        }
        
        public string GetGlobalSetting(string settingName) {
            return base.Channel.GetGlobalSetting(settingName);
        }
        
        public void SetGlobalSetting(string settingName, string value) {
            base.Channel.SetGlobalSetting(settingName, value);
        }
        
        public Cfb.CandidatePortal.SubmissionDocuments.CsmartIdsRequestHistory GetCsmartIdsRequests(string candidateID, string electionCycle) {
            return base.Channel.GetCsmartIdsRequests(candidateID, electionCycle);
        }
        
        public Cfb.CandidatePortal.SubmissionDocuments.DisclosureStatementHistories GetDisclosureStatements(string candidateID, string electionCycle) {
            return base.Channel.GetDisclosureStatements(candidateID, electionCycle);
        }
        
        public Cfb.CandidatePortal.DoingBusinessReviews GetDoingBusinessReviews(string candidateID, string electionCycle) {
            return base.Channel.GetDoingBusinessReviews(candidateID, electionCycle);
        }
        
        public Cfb.CandidatePortal.Elections GetElections(string cutoff) {
            return base.Channel.GetElections(cutoff);
        }
        
        public Cfb.CandidatePortal.Elections GetActiveElections(string cutoff, string candidateID) {
            return base.Channel.GetActiveElections(cutoff, candidateID);
        }
        
        public Cfb.CandidatePortal.ExtensionRequest GetExtensionRequest(string candidateID, string electionCycle, Cfb.CandidatePortal.ExtensionType type, byte reviewNumber, byte iteration) {
            return base.Channel.GetExtensionRequest(candidateID, electionCycle, type, reviewNumber, iteration);
        }
        
        public Cfb.CandidatePortal.ExtensionRequest AddExtensionRequest(string candidateID, string electionCycle, Cfb.CandidatePortal.ExtensionType type, byte reviewNumber, System.DateTime date, System.DateTime requestedDueDate, string reason) {
            return base.Channel.AddExtensionRequest(candidateID, electionCycle, type, reviewNumber, date, requestedDueDate, reason);
        }
        
        public Cfb.CandidatePortal.SubmissionDocuments.FilerRegistrationHistory GetFilerRegistrations(string candidateID, string electionCycle) {
            return base.Channel.GetFilerRegistrations(candidateID, electionCycle);
        }
        
        public Cfb.CandidatePortal.FilingDeadlines GetFilingDeadlines(string candidateID, string electionCycle) {
            return base.Channel.GetFilingDeadlines(candidateID, electionCycle);
        }
        
        public Cfb.CandidatePortal.FinancialSummary GetFinancialSummary(string candidateID, string electionCycle) {
            return base.Channel.GetFinancialSummary(candidateID, electionCycle);
        }
        
        public System.Collections.Generic.Dictionary<byte, Cfb.Cfis.CampaignContacts.Liaison> GetLiaisons(string candidateID, char committeeID) {
            return base.Channel.GetLiaisons(candidateID, committeeID);
        }
        
        public Cfb.CandidatePortal.PaymentPlan GetPaymentPlan(string candidateID, string electionCycle) {
            return base.Channel.GetPaymentPlan(candidateID, electionCycle);
        }
        
        public Cfb.CandidatePortal.SubmissionDocuments.PreElectionDisclosureHistory GetPreElectionDisclosures(string candidateID, string electionCycle) {
            return base.Channel.GetPreElectionDisclosures(candidateID, electionCycle);
        }
        
        public Cfb.CandidatePortal.SubmissionDocuments.StatementOfNeedHistory GetStatementsOfNeed(string candidateID, string electionCycle) {
            return base.Channel.GetStatementsOfNeed(candidateID, electionCycle);
        }
        
        public Cfb.CandidatePortal.StatementReviews GetPrincipalStatementReviews(string candidateID, string electionCycle) {
            return base.Channel.GetPrincipalStatementReviews(candidateID, electionCycle);
        }
        
        public Cfb.CandidatePortal.StatementReviews GetStatementReviews(string candidateID, string electionCycle) {
            return base.Channel.GetStatementReviews(candidateID, electionCycle);
        }
        
        public System.Collections.Generic.Dictionary<byte, Cfb.CandidatePortal.Statement> GetStatements(string electionCycle) {
            return base.Channel.GetStatements(electionCycle);
        }
        
        public Cfb.CandidatePortal.SubmissionDocuments.TerminationHistory GetTerminationVerifications(string candidateID, string electionCycle) {
            return base.Channel.GetTerminationVerifications(candidateID, electionCycle);
        }
        
        public Cfb.CandidatePortal.ThresholdHistory GetThresholdHistory(string candidateID, string electionCycle) {
            return base.Channel.GetThresholdHistory(candidateID, electionCycle);
        }
        
        public System.Nullable<System.DateTime> GetWebTransferDate(string electionCycle) {
            return base.Channel.GetWebTransferDate(electionCycle);
        }
        
        public Cfb.CandidatePortal.Cmo.CmoAttachment AddCmoAttachmentStream(Cfb.CandidatePortal.Cmo.CmoAttachmentStream stream) {
            return base.Channel.AddCmoAttachmentStream(stream);
        }
        
        public Cfb.CandidatePortal.Cmo.CmoAttachment AddCmoAttachment(string candidateID, int messageID, byte[] data, string name) {
            return base.Channel.AddCmoAttachment(candidateID, messageID, data, name);
        }
        
        public bool DeleteCmoAttachment(Cfb.CandidatePortal.Cmo.CmoAttachment attachment) {
            return base.Channel.DeleteCmoAttachment(attachment);
        }
        
        public Cfb.CandidatePortal.Cmo.CmoAttachment GetCmoAttachment(string uniqueID) {
            return base.Channel.GetCmoAttachment(uniqueID);
        }
        
        public Cfb.CandidatePortal.Cmo.CmoAttachment GetCmoAttachmentByIDs(string candidateID, int messageID, byte id) {
            return base.Channel.GetCmoAttachmentByIDs(candidateID, messageID, id);
        }
        
        public string GetCmoAttachmentPath(string candidateID, int messageID, byte id) {
            return base.Channel.GetCmoAttachmentPath(candidateID, messageID, id);
        }
        
        public bool UpdateCmoAttachment(Cfb.CandidatePortal.Cmo.CmoAttachment attachment) {
            return base.Channel.UpdateCmoAttachment(attachment);
        }
        
        public bool DeleteCmoCategory(Cfb.CandidatePortal.Cmo.CmoCategory category) {
            return base.Channel.DeleteCmoCategory(category);
        }
        
        public System.Collections.Generic.Dictionary<byte, Cfb.CandidatePortal.Cmo.CmoCategory> GetCmoCategories() {
            return base.Channel.GetCmoCategories();
        }
        
        public Cfb.CandidatePortal.Cmo.CmoCategory GetCmoCategory(byte id) {
            return base.Channel.GetCmoCategory(id);
        }
        
        public bool UpdateCmoCategory(Cfb.CandidatePortal.Cmo.CmoCategory category) {
            return base.Channel.UpdateCmoCategory(category);
        }
        
        public System.Collections.Generic.List<Cfb.CandidatePortal.Cmo.CmoMessage> GetMailboxMessages(string candidateID, Cfb.CandidatePortal.Cmo.CmoMailboxView view, System.Collections.Generic.List<string> elections) {
            return base.Channel.GetMailboxMessages(candidateID, view, elections);
        }
        
        public uint CountUnopenedMailboxMessages(string candidateID, System.Collections.Generic.List<string> elections) {
            return base.Channel.CountUnopenedMailboxMessages(candidateID, elections);
        }
        
        public Cfb.CandidatePortal.Cmo.CmoMessage AddCmoMessage(string candidateID, string electionCycle, string title, string body, string creator, string openReceiptEmail, byte categoryID) {
            return base.Channel.AddCmoMessage(candidateID, electionCycle, title, body, creator, openReceiptEmail, categoryID);
        }
        
        public bool DeleteCmoMessage(string candidateID, int messageID, byte[] version) {
            return base.Channel.DeleteCmoMessage(candidateID, messageID, version);
        }
        
        public System.Collections.Generic.List<Cfb.CandidatePortal.Cmo.CmoMessage> FindCmoMessages(string candidateID, string electionCycle, string creator, System.Nullable<byte> category, string title, string body, System.Nullable<System.DateTime> postedStart, System.Nullable<System.DateTime> postedEnd, System.Nullable<bool> opened, System.Nullable<bool> hasAttachments) {
            return base.Channel.FindCmoMessages(candidateID, electionCycle, creator, category, title, body, postedStart, postedEnd, opened, hasAttachments);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCmoMessageCreators() {
            return base.Channel.GetCmoMessageCreators();
        }
        
        public Cfb.CandidatePortal.Cmo.CmoMessage GetCmoMessageByCandidateMessage(string candidateID, int messageID) {
            return base.Channel.GetCmoMessageByCandidateMessage(candidateID, messageID);
        }
        
        public Cfb.CandidatePortal.Cmo.CmoMessage GetCmoMessageByID(string uniqueID) {
            return base.Channel.GetCmoMessageByID(uniqueID);
        }
        
        public System.Collections.Generic.List<Cfb.CandidatePortal.Cmo.CmoMessage> GetCmoMessages(System.Collections.Generic.List<string> uniqueIDs) {
            return base.Channel.GetCmoMessages(uniqueIDs);
        }
        
        public System.Collections.Generic.List<Cfb.CandidatePortal.Cmo.CmoMessage> GetCmoPostedMessagesByCandidateElection(string candidateID, string electionCycle) {
            return base.Channel.GetCmoPostedMessagesByCandidateElection(candidateID, electionCycle);
        }
        
        public System.Collections.Generic.List<Cfb.CandidatePortal.Cmo.CmoMessage> GetCmoPostedMessages(bool showAllData) {
            return base.Channel.GetCmoPostedMessages(showAllData);
        }
        
        public bool OpenCmoMessage(string candidateID, int messageID, string username, byte[] version) {
            return base.Channel.OpenCmoMessage(candidateID, messageID, username, version);
        }
        
        public bool PostCmoMessage(string candidateID, int messageID, byte[] version, bool notify) {
            return base.Channel.PostCmoMessage(candidateID, messageID, version, notify);
        }
        
        public bool SetCmoMessageArchiveStatus(string candidateID, int messageID, bool archived, string username, byte[] version) {
            return base.Channel.SetCmoMessageArchiveStatus(candidateID, messageID, archived, username, version);
        }
        
        public bool SetCmoMessageFlagStatus(string candidateID, int messageID, bool flagged, string username, byte[] version) {
            return base.Channel.SetCmoMessageFlagStatus(candidateID, messageID, flagged, username, version);
        }
        
        public bool UpdateCmoMessage(Cfb.CandidatePortal.Cmo.CmoMessage message) {
            return base.Channel.UpdateCmoMessage(message);
        }
        
        public Cfb.CandidatePortal.Cmo.CmoSettings AddCmoSettings(string candidateId, bool isPaperless, string username) {
            return base.Channel.AddCmoSettings(candidateId, isPaperless, username);
        }
        
        public Cfb.CandidatePortal.Cmo.CmoSettings GetCmoSettings(string candidateId) {
            return base.Channel.GetCmoSettings(candidateId);
        }
        
        public bool UpdateCmoSettings(Cfb.CandidatePortal.Cmo.CmoSettings settings) {
            return base.Channel.UpdateCmoSettings(settings);
        }
        
        public System.Collections.Generic.Dictionary<byte, string> GetStatementReviewMessageIDs(string candidateID, string electionCycle) {
            return base.Channel.GetStatementReviewMessageIDs(candidateID, electionCycle);
        }
        
        public System.Collections.Generic.Dictionary<byte, string> GetComplianceVisitMessageIDs(string candidateID, string electionCycle) {
            return base.Channel.GetComplianceVisitMessageIDs(candidateID, electionCycle);
        }
        
        public System.Collections.Generic.Dictionary<byte, string> GetDoingBusinessReviewMessageIDs(string candidateID, string electionCycle) {
            return base.Channel.GetDoingBusinessReviewMessageIDs(candidateID, electionCycle);
        }
        
        public System.Collections.Generic.Dictionary<Cfb.CandidatePortal.PostElection.AuditReportType, string> GetAuditReportMessageIDs(string candidateID, string electionCycle) {
            return base.Channel.GetAuditReportMessageIDs(candidateID, electionCycle);
        }
        
        public string GetPaymentMessageID(string candidateID, byte paymentRun) {
            return base.Channel.GetPaymentMessageID(candidateID, paymentRun);
        }
        
        public bool SetCmoMessageTolling(string candidateID, int messageID, int eventNumber, Cfb.CandidatePortal.PostElection.TollingLetter letter) {
            return base.Channel.SetCmoMessageTolling(candidateID, messageID, eventNumber, letter);
        }
        
        public System.Collections.Generic.Dictionary<int, string> GetTollingMessageIDs(string candidateID, string electionCycle, bool far) {
            return base.Channel.GetTollingMessageIDs(candidateID, electionCycle, far);
        }
        
        public void PingCfis() {
            base.Channel.PingCfis();
        }
        
        public Cfb.Cfis.CampaignContacts.Entity GetEntity(string candidateID, System.Nullable<char> committeeID, string electionCycle, System.Nullable<byte> liaisonID) {
            return base.Channel.GetEntity(candidateID, committeeID, electionCycle, liaisonID);
        }
    }
}
